/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package mothershipattendance;

import java.awt.Color;
import java.net.InetAddress;
import java.net.UnknownHostException;

/**
 *
 * @author tylerfontana
 */
public class ConnectToServer extends javax.swing.JFrame {

    /** Creates new form SpecifyServerDetails */
    public ConnectToServer() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Server Details");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setOpaque(false);
        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Enter Server Details:");

        jPanel3.setOpaque(false);

        jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Display Name");
        jTextField1.setToolTipText("<html>Please Enter Your Actual First & Last Name To<br>Help Students Identify the Instructor Within<br>the Server Client Connection.<br><br><center>Note: *THIS FIELD SHOULD ALREADY BE<br>FILLED IN ACCORDING TO YOUR LOGIN<br>PROFILE CREDINTIALS. PLEASE DON'T<br>CHANGE THE DEFAULT VALUE*</center></html>");
        jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        jTextField2.setForeground(new java.awt.Color(153, 153, 153));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("Host INET4 IP Address");
        jTextField2.setToolTipText("<html>This Field Should Be Automatically Filled in Upon<br> Window Creation with the Specific INET4 IP<br> Address Associated with Your Machine.<br><br><center>Note: *PLEASE DO NOT CHANGE FIELD<br>INFORMATION UNLESS A DIFFERENT IP<br>ADDRESS APPLICATION IS REQUIRED*</center></html>");
        jTextField2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField2FocusLost(evt);
            }
        });

        jTextField3.setForeground(new java.awt.Color(153, 153, 153));
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setText("Port Number");
        jTextField3.setToolTipText("<html>This Field is meant to contain the Specified<br>Port Number That the Instructor wishes to<br>Create the Server On. Please enter an Integer<br>Value from the Range (5000 - 9000). If The<br>Desired Port Number is Already in Use, Please<br>Select A Different Value and Click the<br>Create Server Button.</html>");
        jTextField3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField3FocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextField3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jTextField1.setEnabled(false);
        Student student = tracker.getCurrentStudentInformation();
        jTextField1.setText(student.getStudentDisplayName());

        try {
            InetAddress me = InetAddress.getLocalHost();
            String dottedQuad = me.getHostAddress();
            jTextField2.setText(dottedQuad);
        }
        catch (UnknownHostException ex) {
            ex.printStackTrace();
        }

        if (jTextField1.getText().equalsIgnoreCase("")) {
            jTextField2.setText("Display Name");
        }
        if (jTextField2.getText().equalsIgnoreCase("")) {
            jTextField2.setText("Host INET4 IP Address");
        }

        jPanel1.setOpaque(false);

        jPasswordField1.setForeground(new java.awt.Color(153, 153, 153));
        jPasswordField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPasswordField1.setText("Password");
        jPasswordField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 355, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(22, Short.MAX_VALUE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(188, Short.MAX_VALUE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(94, Short.MAX_VALUE)))
        );

        jPasswordField1.setEchoChar((char) 0);

        jPanel6.setOpaque(false);

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hello");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 355, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(24, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(231, 231, 231)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(69, Short.MAX_VALUE)))
        );

        jLabel1.setVisible(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(271, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);

        jPanel4.setOpaque(false);

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton1.setText("Connect To Server");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(259, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        getContentPane().add(jPanel4);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/BackgroundDirectoryScreen357x323.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 327, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5);

        pack();
    }// </editor-fold>                        

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {                                        
        jLabel1.setVisible(false);
        
        jTextField1.setBackground(new java.awt.Color(255, 255, 255));
        jTextField1.setForeground(new java.awt.Color(0, 0, 0));

        // If Text in Text Field is equal to Enter Username
        // Make TextField empty upon click.
        if (jTextField1.getText().equalsIgnoreCase("Display Name")) {
            // Set Display Text
            jTextField1.setText("");
            jTextField1.setForeground(new java.awt.Color(0, 0, 0));
        }
    }                                       

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {                                      
        // If Text in Text Field is empty Make TextField
        // Display Enter Username upon focus lost.
        if (jTextField1.getText().equalsIgnoreCase("")) {
            // Display Text
            jTextField1.setForeground(new java.awt.Color(153, 153, 153));
            jTextField1.setText("Display Name");
        }
        else if (jTextField1.getText().equalsIgnoreCase("Display Name")) {
            jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        }
    }                                     

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {                                        
        jLabel1.setVisible(false);
        
        jTextField2.setBackground(new java.awt.Color(255, 255, 255));
        jTextField2.setForeground(new java.awt.Color(0, 0, 0));

        // If Text in Text Field is equal to Enter Username
        // Make TextField empty upon click.
        if (jTextField2.getText().equalsIgnoreCase("Host INET4 IP Address")) {
            // Set Display Text
            jTextField2.setText("");
            jTextField2.setForeground(new java.awt.Color(0, 0, 0));
        }
    }                                       

    private void jTextField2FocusLost(java.awt.event.FocusEvent evt) {                                      
        // If Text in Text Field is empty Make TextField
        // Display Enter Username upon focus lost.
        if (jTextField2.getText().equalsIgnoreCase("")) {
            // Display Text
            jTextField2.setForeground(new java.awt.Color(153, 153, 153));
            jTextField2.setText("Host INET4 IP Address");
        }
        else if (jTextField2.getText().equalsIgnoreCase("Host INET4 IP Address")) {
            jTextField2.setForeground(new java.awt.Color(153, 153, 153));
        }
    }                                     

    private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {                                        
        jLabel1.setVisible(false);
        
        jTextField3.setBackground(new java.awt.Color(255, 255, 255));
        jTextField3.setForeground(new java.awt.Color(0, 0, 0));
        // If Text in Text Field is equal to Enter Username
        // Make TextField empty upon click.
        if (jTextField3.getText().equalsIgnoreCase("Port Number")) {
            // Set Display Text
            jTextField3.setText("");
            jTextField3.setForeground(new java.awt.Color(0, 0, 0));
        }
    }                                       

    private void jTextField3FocusLost(java.awt.event.FocusEvent evt) {                                      
        // If Text in Text Field is empty Make TextField
        // Display Enter Username upon focus lost.
        if (jTextField3.getText().equalsIgnoreCase("")) {
            // Display Text
            jTextField3.setForeground(new java.awt.Color(153, 153, 153));
            jTextField3.setText("Port Number");
        }
        else if (jTextField3.getText().equalsIgnoreCase("Port Number")) {
            jTextField3.setForeground(new java.awt.Color(153, 153, 153));
        }
    }                                     

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        jLabel1.setVisible(false);
        jTextField1.setBackground(new java.awt.Color(255, 255, 255));
        jTextField2.setBackground(new java.awt.Color(255, 255, 255));
        jTextField3.setBackground(new java.awt.Color(255, 255, 255));
        jPasswordField1.setBackground(new java.awt.Color(255, 255, 255));
        
        String password = new String(jPasswordField1.getPassword());
        System.out.println("ConnectToServer: " + password);
        
        if (jTextField1.getText().equalsIgnoreCase("Display Name") || jTextField2.getText().equalsIgnoreCase("Host IP Address") || jTextField3.getText().equalsIgnoreCase("Port Number") || password.equalsIgnoreCase("Password")) {
            counter = 0;
            
            if (jTextField1.getText().equalsIgnoreCase("Display Name")) {
                counter++;
            }
            if (jTextField2.getText().equalsIgnoreCase("Host INET4 IP Address")) {
                counter++;
            }
            if (jTextField3.getText().equalsIgnoreCase("Port Number")) {
                counter++;
            }
            if (password.equalsIgnoreCase("Password")) {
                counter++;
            }
            
            if (counter > 1) {
                WarningMessageCSMultipleFields warn = new WarningMessageCSMultipleFields();
                warn.setVisible(true);
            }
            else if (counter == 1) {
                if (jTextField1.getText().equalsIgnoreCase("Display Name")) {
                    WarningMessageCSDisplayName warn = new WarningMessageCSDisplayName();
                    warn.setVisible(true);
                }
                if (jTextField2.getText().equalsIgnoreCase("Host INET4 IP Address")) {
                    WarningMessageCSHostIPAddress warn = new WarningMessageCSHostIPAddress();
                    warn.setVisible(true);
                }
                if (jTextField3.getText().equalsIgnoreCase("Port Number")) {
                    WarningMessageCSPortNumber warn = new WarningMessageCSPortNumber();
                    warn.setVisible(true);
                }
                if (password.equalsIgnoreCase("Password")) {
                    WarningMessageCSPassword warn = new WarningMessageCSPassword();
                    warn.setVisible(true);
                }
            }
        }
        else {
            
            System.out.println(jTextField3.getText());
            
            try {
                String tempString = jTextField3.getText();
                int tempNum = Integer.parseInt(tempString.trim());

                if (tempNum < 5000 || tempNum > 9000) {
                    System.out.println("1 " + jTextField3.getText());
                    WarningMessageCSInvalidPortNumber port = new WarningMessageCSInvalidPortNumber();
                    port.setVisible(true);
                }
                else {
                    clientTracker.setDisplayName(jTextField1.getText());
                    clientTracker.setPassword(password);
                    clientTracker.setPortNumber(tempNum);
                    
                    String[] args = {"Client", jTextField1.getText(), jTextField2.getText(), password, "" + tempNum};
                    System.out.println("Getting Here in Connect To Server");
                    
                    //try {
                        System.out.println("1 Getting Here in Connect To Server");
                        
                        /*  Partially Working
                        
                        ThreadStarter starter = new ThreadStarter();
                        starter.setArgumentArray(args);
                        starter.run();*/
                        
                        ThreadStarter.main(args);
                        
                        //Client.main(args);
                        System.out.println("1 Getting Here in Connect To Server");
                    //} 
                    //catch (UnknownHostException ex) {
                        //ex.printStackTrace();
                    //}
                    
                    System.out.println("Getting Here in Connect To Server");
                    MainScreenStudent.jLabel56.setVisible(true);
                    MainScreenStudent.jLabel51.setVisible(true);
                    System.out.println("CONNECTTOSERVER 6");
                    
                    dispose();
                }
            }
            catch (NullPointerException e) {
                System.out.println(e.getStackTrace());
                
                System.out.println(jTextField1.getText());
                System.out.println(jTextField2.getText());
                System.out.println(jTextField3.getText());
                System.out.println(jPasswordField1.getPassword());
                //System.out.println("2 " + e.getStackTrace());
                WarningMessageCSInvalidPortNumber port = new WarningMessageCSInvalidPortNumber();
                port.setVisible(true);
            }
        }
    }                                        

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {                                       
        // TODO add your handling code here: 
    }                                      

    private void formComponentShown(java.awt.event.ComponentEvent evt) {                                    
        jButton1.requestFocusInWindow();
    }                                   

    private void formWindowClosed(java.awt.event.WindowEvent evt) {                                  
        //MainScreen.jToggleButton7.setSelected(false);
        MainScreenStudent.jToggleButton7.setText("Disconnect");
        
        MainScreenStudent.serverINET4IPAddress = jTextField2.getText();
    }                                 

    private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
        TrackerObject tracker = new TrackerObject();
        jLabel1.setVisible(false);
        
        String password = new String(jPasswordField1.getPassword());
        
        if (!jTextField1.getText().equalsIgnoreCase("Display Name")) {
            jTextField1.setForeground(new Color(0, 0, 0));
        }
        if (!jTextField2.getText().equalsIgnoreCase("Host INET4 IP Address")) {
            jTextField2.setForeground(new Color(0, 0, 0));
        }
        if (!jTextField3.getText().equalsIgnoreCase("Port Number")) {
            jTextField3.setForeground(new Color(0, 0, 0));
        }
        if (!password.equalsIgnoreCase("Password")) {
            jPasswordField1.setForeground(new Color(0, 0, 0));
        }
    
    }                                 

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {                                            
        String password = new String(jPasswordField1.getPassword());
        
        jPasswordField1.setBackground(new java.awt.Color(255, 255, 255));
        jPasswordField1.setForeground(new java.awt.Color(0, 0, 0));                                          
        // If Text in Text Field is equal to Enter Username
        // Make TextField empty upon click.
        if (password.equalsIgnoreCase("Password")) {
            // Set Display Text
            jPasswordField1.setText("");
            jPasswordField1.setEchoChar('•');
            jPasswordField1.setForeground(new java.awt.Color(0, 0, 0));
        }
    }                                           

    private void jPasswordField1FocusLost(java.awt.event.FocusEvent evt) {                                          
        String password = new String(jPasswordField1.getPassword());
        
        // If Text in Text Field is empty Make TextField
        // Display Enter Username upon focus lost.
        if (password.equalsIgnoreCase("")) {
            // Display Text
            jPasswordField1.setForeground(new java.awt.Color(153, 153, 153));
            jPasswordField1.setEchoChar((char)0);
            jPasswordField1.setText("Password");
        }
        else if (password.equalsIgnoreCase("Password")) {
            jPasswordField1.setForeground(new java.awt.Color(153, 153, 153));
            jPasswordField1.setEchoChar((char)0);
        }
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConnectToServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConnectToServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConnectToServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConnectToServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConnectToServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    public static javax.swing.JButton jButton1;
    public static javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    public static javax.swing.JPasswordField jPasswordField1;
    public static javax.swing.JTextField jTextField1;
    public static javax.swing.JTextField jTextField2;
    public static javax.swing.JTextField jTextField3;
    // End of variables declaration                   
    public static ClientInformationTracker clientTracker = new ClientInformationTracker();
    public static TrackerObject tracker = new TrackerObject();
    int counter = 0;
}

