/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mothershipattendance;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.text.*;
import java.awt.font.*;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.EventObject;
import java.util.List;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.net.URI;
import javax.swing.table.TableColumnModel;
import javax.swing.ImageIcon;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.SwingWorker;
import javax.swing.event.CellEditorListener;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.File;
import java.awt.CardLayout;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author tylerfontana
 */
public class MainScreen extends javax.swing.JFrame {

    /**
     * Creates new form ImageDisplay
     */
    public MainScreen() {
        
        controller.execute();
        loadingImageController.execute();
        
        this.setLocation(windowTracker.getMainWindowLocation());
        
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel16 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel70 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jPanel71 = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        jPanel48 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jPanel49 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jPanel57 = new javax.swing.JPanel();
        jPanel64 = new javax.swing.JPanel();
        jPanel60 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jPanel58 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jPanel59 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jPanel61 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jPanel62 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jPanel63 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        jPanel65 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jPanel50 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jPanel45 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jPanel44 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jPanel51 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jPanel55 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jPanel56 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel46 = new javax.swing.JPanel();
        EditProfileButton = new javax.swing.JButton();
        jPanel47 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jComboBox8 = new javax.swing.JComboBox<>();
        jLabel59 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel67 = new javax.swing.JPanel();
        jPanel68 = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jPanel69 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel28 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jPanel66 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton6 = new javax.swing.JButton();
        jLabel58 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPanel37 = new javax.swing.JPanel();
        jPanel38 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        jToggleButton7 = new javax.swing.JToggleButton();
        jButton7 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jPanel52 = new javax.swing.JPanel();
        jPanel53 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jButton9 = new javax.swing.JButton();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jPanel54 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jPanel39 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jPanel42 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mothership Attendance (Desktop Edition)");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(900, 619));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(900, 619));
        jTabbedPane1.setRequestFocusEnabled(false);
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel16.setBackground(new java.awt.Color(190, 217, 238));
        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel16.setMaximumSize(new java.awt.Dimension(900, 588));
        jPanel16.setMinimumSize(new java.awt.Dimension(900, 588));
        jPanel16.setPreferredSize(new java.awt.Dimension(900, 588));
        jPanel16.setLayout(new javax.swing.OverlayLayout(jPanel16));

        jPanel70.setBackground(new java.awt.Color(204, 204, 204));
        jPanel70.setOpaque(false);
        jPanel70.setPreferredSize(new java.awt.Dimension(898, 588));

        jLabel63.setFont(new java.awt.Font("Lucida Grande", 1, 38)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(255, 255, 255));
        jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel63.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/SAOLoaderGIFImage.gif"))); // NOI18N

        javax.swing.GroupLayout jPanel70Layout = new javax.swing.GroupLayout(jPanel70);
        jPanel70.setLayout(jPanel70Layout);
        jPanel70Layout.setHorizontalGroup(
            jPanel70Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel70Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel63, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        jPanel70Layout.setVerticalGroup(
            jPanel70Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel70Layout.createSequentialGroup()
                .addGap(0, 25, Short.MAX_VALUE)
                .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel71.setBackground(new java.awt.Color(204, 204, 204));
        jPanel71.setOpaque(false);
        jPanel71.setPreferredSize(new java.awt.Dimension(898, 588));

        jLabel64.setBackground(new java.awt.Color(255, 255, 255));
        jLabel64.setFont(new java.awt.Font("Lucida Grande", 1, 38)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(255, 255, 255));
        jLabel64.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel64.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel64.setOpaque(true);

        javax.swing.GroupLayout jPanel71Layout = new javax.swing.GroupLayout(jPanel71);
        jPanel71.setLayout(jPanel71Layout);
        jPanel71Layout.setHorizontalGroup(
            jPanel71Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel71Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel64, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel71Layout.setVerticalGroup(
            jPanel71Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel71Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel64, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel48.setBackground(new java.awt.Color(204, 204, 204));
        jPanel48.setOpaque(false);
        jPanel48.setPreferredSize(new java.awt.Dimension(898, 588));

        jLabel41.setFont(new java.awt.Font("Lucida Grande", 1, 38)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/TitleVersionImage336x225.png"))); // NOI18N

        javax.swing.GroupLayout jPanel48Layout = new javax.swing.GroupLayout(jPanel48);
        jPanel48.setLayout(jPanel48Layout);
        jPanel48Layout.setHorizontalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 877, Short.MAX_VALUE)
            .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel48Layout.createSequentialGroup()
                    .addContainerGap(27, Short.MAX_VALUE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(514, Short.MAX_VALUE)))
        );
        jPanel48Layout.setVerticalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 571, Short.MAX_VALUE)
            .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel48Layout.createSequentialGroup()
                    .addContainerGap(29, Short.MAX_VALUE)
                    .addComponent(jLabel41)
                    .addContainerGap(361, Short.MAX_VALUE)))
        );

        jPanel49.setBackground(new java.awt.Color(204, 204, 204));
        jPanel49.setOpaque(false);
        jPanel49.setPreferredSize(new java.awt.Dimension(898, 588));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/adminButton155x172.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel49Layout = new javax.swing.GroupLayout(jPanel49);
        jPanel49.setLayout(jPanel49Layout);
        jPanel49Layout.setHorizontalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel49Layout.createSequentialGroup()
                    .addContainerGap(38, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(696, Short.MAX_VALUE)))
        );
        jPanel49Layout.setVerticalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 571, Short.MAX_VALUE)
            .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel49Layout.createSequentialGroup()
                    .addContainerGap(366, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(29, Short.MAX_VALUE)))
        );

        jPanel57.setBackground(new java.awt.Color(204, 204, 204));
        jPanel57.setOpaque(false);
        jPanel57.setPreferredSize(new java.awt.Dimension(898, 588));

        jPanel64.setOpaque(false);

        jPanel60.setOpaque(false);

        jLabel42.setFont(new java.awt.Font("American Captain", 1, 44)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 51, 51));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/Features.png"))); // NOI18N

        javax.swing.GroupLayout jPanel60Layout = new javax.swing.GroupLayout(jPanel60);
        jPanel60.setLayout(jPanel60Layout);
        jPanel60Layout.setHorizontalGroup(
            jPanel60Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jPanel60Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel60Layout.createSequentialGroup()
                    .addGap(66, 66, 66)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(66, Short.MAX_VALUE)))
        );
        jPanel60Layout.setVerticalGroup(
            jPanel60Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel60Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel60Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel58.setOpaque(false);

        jLabel43.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel43.setText("<html><center><font color=#0083ff>Profile Tab:</font> <font color=ffffff>Allows You to Edit the Personal Information Associated With Your Account Along with Choose A Unique Image to Represent Your Profile During Attendance Servers!<font></center></html>");

        javax.swing.GroupLayout jPanel58Layout = new javax.swing.GroupLayout(jPanel58);
        jPanel58.setLayout(jPanel58Layout);
        jPanel58Layout.setHorizontalGroup(
            jPanel58Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
            .addGroup(jPanel58Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel58Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel58Layout.setVerticalGroup(
            jPanel58Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 78, Short.MAX_VALUE)
            .addGroup(jPanel58Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel58Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(16, Short.MAX_VALUE)))
        );

        jPanel59.setOpaque(false);

        jLabel44.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel44.setText("<html><center><font color=#0083ff>Management Tab:</font><font color=#ffffff> (</font><font color=#00b61c>Instructor Version Only</font><font color=#ffffff>) Allows Teachers to Manipulate the Data Present within the online MyPHPAdmin Remote Database. Just select an option from the drop down menu to either Create A New Class, Update Present Class Information, Delete An Instructor Associated Class, Link Un-Associated Classes to An Instructors Account, or Manage Student Access!</font></center></html>");

        javax.swing.GroupLayout jPanel59Layout = new javax.swing.GroupLayout(jPanel59);
        jPanel59.setLayout(jPanel59Layout);
        jPanel59Layout.setHorizontalGroup(
            jPanel59Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 392, Short.MAX_VALUE)
            .addGroup(jPanel59Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel59Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel59Layout.setVerticalGroup(
            jPanel59Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel59Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel59Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(39, Short.MAX_VALUE)))
        );

        jPanel61.setOpaque(false);

        jLabel45.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 51, 51));
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setText("<html><center><font color=#0083ff>Records Tab:</font><font color=#ffffff> (</font><font color=#00b61c>Instructor Version Only</font><font color=#ffffff>) Use this screen to pull up the Student Attendance Records Associated with your Linked Classes!</font></center></html>");

        javax.swing.GroupLayout jPanel61Layout = new javax.swing.GroupLayout(jPanel61);
        jPanel61.setLayout(jPanel61Layout);
        jPanel61Layout.setHorizontalGroup(
            jPanel61Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 386, Short.MAX_VALUE)
            .addGroup(jPanel61Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel61Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel61Layout.setVerticalGroup(
            jPanel61Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel61Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel61Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(38, 38, 38)))
        );

        jPanel62.setOpaque(false);

        jLabel46.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 51, 51));
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel46.setText("<html><center><font color=#0083ff>Messages Tab:</font><font color=#ffffff> Use this screen to view and send messages between Students while an Attendance Server is Active!</font></center></html>");

        javax.swing.GroupLayout jPanel62Layout = new javax.swing.GroupLayout(jPanel62);
        jPanel62.setLayout(jPanel62Layout);
        jPanel62Layout.setHorizontalGroup(
            jPanel62Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 391, Short.MAX_VALUE)
            .addGroup(jPanel62Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel62Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel62Layout.setVerticalGroup(
            jPanel62Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel62Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel62Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(59, 59, 59)))
        );

        jPanel63.setOpaque(false);

        jLabel47.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 51, 51));
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("<html><center><font color=#0083ff>Attendance Tab:</font><font color=#ffffff> Use This Screen to Either Start or Connect to an Existing Attendance Inspection Server! Just Select A Class and Click the Open Server Button to Start an Attendance Server if you're an Instructor. Or Click the Connect Button to connects to a prexisting Attendance Server if you are a Student!</font></center></html>");

        javax.swing.GroupLayout jPanel63Layout = new javax.swing.GroupLayout(jPanel63);
        jPanel63.setLayout(jPanel63Layout);
        jPanel63Layout.setHorizontalGroup(
            jPanel63Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 387, Short.MAX_VALUE)
            .addGroup(jPanel63Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel63Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel63Layout.setVerticalGroup(
            jPanel63Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel63Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel63Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jPanel65.setOpaque(false);

        jLabel49.setBackground(new java.awt.Color(0, 0, 0));
        jLabel49.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 51, 51));
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/welcomeScreenInformationLabel466x527.png"))); // NOI18N

        javax.swing.GroupLayout jPanel65Layout = new javax.swing.GroupLayout(jPanel65);
        jPanel65.setLayout(jPanel65Layout);
        jPanel65Layout.setHorizontalGroup(
            jPanel65Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
            .addGroup(jPanel65Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE))
        );
        jPanel65Layout.setVerticalGroup(
            jPanel65Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 527, Short.MAX_VALUE)
            .addGroup(jPanel65Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel65Layout.createSequentialGroup()
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel64Layout = new javax.swing.GroupLayout(jPanel64);
        jPanel64.setLayout(jPanel64Layout);
        jPanel64Layout.setHorizontalGroup(
            jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addComponent(jPanel60, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(33, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(jPanel58, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(39, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(jPanel59, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(37, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addGap(40, 40, 40)
                    .addComponent(jPanel61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(40, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(jPanel62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(38, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addGap(39, 39, 39)
                    .addComponent(jPanel63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(40, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel65, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel64Layout.setVerticalGroup(
            jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 527, Short.MAX_VALUE)
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel60, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(453, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addGap(74, 74, 74)
                    .addComponent(jPanel58, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(375, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addGap(147, 147, 147)
                    .addComponent(jPanel59, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(250, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addGap(270, 270, 270)
                    .addComponent(jPanel61, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(188, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addGap(337, 337, 337)
                    .addComponent(jPanel62, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(126, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addGap(383, 383, 383)
                    .addComponent(jPanel63, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(34, Short.MAX_VALUE)))
            .addGroup(jPanel64Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel64Layout.createSequentialGroup()
                    .addComponent(jPanel65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel57Layout = new javax.swing.GroupLayout(jPanel57);
        jPanel57.setLayout(jPanel57Layout);
        jPanel57Layout.setHorizontalGroup(
            jPanel57Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 889, Short.MAX_VALUE)
            .addGroup(jPanel57Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel57Layout.createSequentialGroup()
                    .addContainerGap(393, Short.MAX_VALUE)
                    .addComponent(jPanel64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(30, Short.MAX_VALUE)))
        );
        jPanel57Layout.setVerticalGroup(
            jPanel57Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 571, Short.MAX_VALUE)
            .addGroup(jPanel57Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel57Layout.createSequentialGroup()
                    .addContainerGap(22, Short.MAX_VALUE)
                    .addComponent(jPanel64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );

        jPanel50.setOpaque(false);
        jPanel50.setPreferredSize(new java.awt.Dimension(898, 588));

        javax.swing.GroupLayout jPanel50Layout = new javax.swing.GroupLayout(jPanel50);
        jPanel50.setLayout(jPanel50Layout);
        jPanel50Layout.setHorizontalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 877, Short.MAX_VALUE)
        );
        jPanel50Layout.setVerticalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 571, Short.MAX_VALUE)
        );

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/Saturn_Removed2.png"))); // NOI18N
        jLabel6.setMaximumSize(new java.awt.Dimension(877, 571));
        jLabel6.setMinimumSize(new java.awt.Dimension(877, 571));
        jLabel6.setPreferredSize(new java.awt.Dimension(898, 588));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/retroMountains.gif"))); // NOI18N
        jLabel5.setMaximumSize(new java.awt.Dimension(877, 571));
        jLabel5.setMinimumSize(new java.awt.Dimension(877, 571));
        jLabel5.setPreferredSize(new java.awt.Dimension(898, 588));

        jLayeredPane1.setLayer(jPanel70, javax.swing.JLayeredPane.POPUP_LAYER);
        jLayeredPane1.setLayer(jPanel71, javax.swing.JLayeredPane.POPUP_LAYER);
        jLayeredPane1.setLayer(jPanel48, javax.swing.JLayeredPane.MODAL_LAYER);
        jLayeredPane1.setLayer(jPanel49, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.setLayer(jPanel57, javax.swing.JLayeredPane.MODAL_LAYER);
        jLayeredPane1.setLayer(jPanel50, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.setLayer(jLabel6, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel49, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel50, javax.swing.GroupLayout.PREFERRED_SIZE, 877, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel48, javax.swing.GroupLayout.PREFERRED_SIZE, 877, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel57, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(268, 268, 268)
                .addComponent(jPanel70, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 889, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addGap(249, 249, 249)
                    .addComponent(jPanel71, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(289, Short.MAX_VALUE)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel49, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel50, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel48, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel57, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jPanel70, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                    .addGap(0, 66, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 264, Short.MAX_VALUE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap(117, Short.MAX_VALUE)
                    .addComponent(jPanel71, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(120, 120, 120)))
        );

        setWelcomeScreenComponentVisibility(false);

        jPanel16.add(jLayeredPane1);

        jTabbedPane1.addTab("Welcome", jPanel16);

        jPanel43.setBackground(new java.awt.Color(190, 217, 238));
        jPanel43.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel43.setMaximumSize(new java.awt.Dimension(900, 588));
        jPanel43.setMinimumSize(new java.awt.Dimension(900, 588));
        jPanel43.setPreferredSize(new java.awt.Dimension(900, 588));
        jPanel43.setLayout(new javax.swing.OverlayLayout(jPanel43));

        jPanel13.setOpaque(false);

        jPanel14.setOpaque(false);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/ProfilePictures/Large/ProfilePicture4.png"))); // NOI18N

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 257, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel7)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 262, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel15.setOpaque(false);

        jLabel30.setFont(new java.awt.Font("American Captain", 0, 100)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Tyler Fontana");
        jLabel30.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel15Layout.createSequentialGroup()
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 116, Short.MAX_VALUE)
            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
        );

        jPanel45.setOpaque(false);

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/InstructorLabel.png"))); // NOI18N

        javax.swing.GroupLayout jPanel45Layout = new javax.swing.GroupLayout(jPanel45);
        jPanel45.setLayout(jPanel45Layout);
        jPanel45Layout.setHorizontalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 159, Short.MAX_VALUE)
            .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
        );
        jPanel45Layout.setVerticalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel45Layout.createSequentialGroup()
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel44.setOpaque(false);

        jLabel33.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("<html><font color=#ff0000>Email</font>:</html>");

        jLabel34.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("fontana.tyler@gmail.com");

        javax.swing.GroupLayout jPanel44Layout = new javax.swing.GroupLayout(jPanel44);
        jPanel44.setLayout(jPanel44Layout);
        jPanel44Layout.setHorizontalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 479, Short.MAX_VALUE)
            .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel44Layout.createSequentialGroup()
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 417, Short.MAX_VALUE)))
            .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel44Layout.createSequentialGroup()
                    .addContainerGap(109, Short.MAX_VALUE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel44Layout.setVerticalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
            .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel44Layout.createSequentialGroup()
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel44Layout.createSequentialGroup()
                    .addComponent(jLabel34)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel51.setOpaque(false);

        jLabel35.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("<html><font color=#000fff>Phone</font>:</html>");

        jLabel36.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("225-202-3570");

        javax.swing.GroupLayout jPanel51Layout = new javax.swing.GroupLayout(jPanel51);
        jPanel51.setLayout(jPanel51Layout);
        jPanel51Layout.setHorizontalGroup(
            jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 479, Short.MAX_VALUE)
            .addGroup(jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel51Layout.createSequentialGroup()
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 402, Short.MAX_VALUE)))
            .addGroup(jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel51Layout.createSequentialGroup()
                    .addContainerGap(108, Short.MAX_VALUE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel51Layout.setVerticalGroup(
            jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
            .addGroup(jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel51Layout.createSequentialGroup()
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel51Layout.createSequentialGroup()
                    .addComponent(jLabel36)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel55.setOpaque(false);

        jLabel37.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("<html><font color=#ff9700>Address</font>:</html>");

        jLabel38.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("4741 Fairfield Street, Metairie LA 70006");
        jLabel38.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel55Layout = new javax.swing.GroupLayout(jPanel55);
        jPanel55.setLayout(jPanel55Layout);
        jPanel55Layout.setHorizontalGroup(
            jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 479, Short.MAX_VALUE)
            .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel55Layout.createSequentialGroup()
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 380, Short.MAX_VALUE)))
            .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel55Layout.createSequentialGroup()
                    .addContainerGap(108, Short.MAX_VALUE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(15, 15, 15)))
        );
        jPanel55Layout.setVerticalGroup(
            jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 46, Short.MAX_VALUE)
            .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel55Layout.createSequentialGroup()
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 21, Short.MAX_VALUE)))
            .addGroup(jPanel55Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
        );

        jPanel56.setOpaque(false);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setMargin(new java.awt.Insets(0, 5, 0, 5));
        jScrollPane1.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel56Layout = new javax.swing.GroupLayout(jPanel56);
        jPanel56.setLayout(jPanel56Layout);
        jPanel56Layout.setHorizontalGroup(
            jPanel56Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 733, Short.MAX_VALUE)
            .addGroup(jPanel56Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel56Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel56Layout.setVerticalGroup(
            jPanel56Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
            .addGroup(jPanel56Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel56Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(317, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                    .addContainerGap(33, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(583, Short.MAX_VALUE)))
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                    .addContainerGap(298, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(75, Short.MAX_VALUE)))
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                    .addContainerGap(67, Short.MAX_VALUE)
                    .addComponent(jPanel56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(73, Short.MAX_VALUE)))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(jPanel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(214, Short.MAX_VALUE))
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                    .addContainerGap(40, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(265, Short.MAX_VALUE)))
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                    .addContainerGap(64, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(387, Short.MAX_VALUE)))
            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                    .addContainerGap(353, Short.MAX_VALUE)
                    .addComponent(jPanel56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(88, Short.MAX_VALUE)))
        );

        jPanel43.add(jPanel13);

        jPanel46.setBackground(new java.awt.Color(204, 204, 204));
        jPanel46.setOpaque(false);
        jPanel46.setPreferredSize(new java.awt.Dimension(898, 588));

        EditProfileButton.setBackground(new java.awt.Color(204, 204, 204));
        EditProfileButton.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        EditProfileButton.setText("Edit Profile");
        EditProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditProfileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel46Layout = new javax.swing.GroupLayout(jPanel46);
        jPanel46.setLayout(jPanel46Layout);
        jPanel46Layout.setHorizontalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 873, Short.MAX_VALUE)
            .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel46Layout.createSequentialGroup()
                    .addContainerGap(343, Short.MAX_VALUE)
                    .addComponent(EditProfileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(366, Short.MAX_VALUE)))
        );
        jPanel46Layout.setVerticalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 567, Short.MAX_VALUE)
            .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel46Layout.createSequentialGroup()
                    .addContainerGap(497, Short.MAX_VALUE)
                    .addComponent(EditProfileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(24, Short.MAX_VALUE)))
        );

        jPanel43.add(jPanel46);

        jPanel47.setPreferredSize(new java.awt.Dimension(900, 588));

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/BackgroundDirectoryScreen900x588.png"))); // NOI18N

        javax.swing.GroupLayout jPanel47Layout = new javax.swing.GroupLayout(jPanel47);
        jPanel47.setLayout(jPanel47Layout);
        jPanel47Layout.setHorizontalGroup(
            jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel47Layout.setVerticalGroup(
            jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
            .addGroup(jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel47Layout.createSequentialGroup()
                    .addComponent(jLabel40)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel43.add(jPanel47);

        jTabbedPane1.addTab("Profile", jPanel43);

        jPanel1.setBackground(new java.awt.Color(190, 217, 238));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setMaximumSize(new java.awt.Dimension(900, 588));
        jPanel1.setMinimumSize(new java.awt.Dimension(900, 588));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 588));
        jPanel1.setLayout(new javax.swing.OverlayLayout(jPanel1));

        jPanel2.setMaximumSize(new java.awt.Dimension(900, 656));
        jPanel2.setMinimumSize(new java.awt.Dimension(900, 656));
        jPanel2.setOpaque(false);
        jPanel2.setPreferredSize(new java.awt.Dimension(900, 588));
        jPanel2.setLayout(new javax.swing.OverlayLayout(jPanel2));
        jPanel1.add(jPanel2);

        jPanel3.setOpaque(false);
        jPanel3.setPreferredSize(new java.awt.Dimension(898, 588));

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " -----------------------------------------------------------", " Create New Class", " Update Class Information", " Delete Class", " Link Un-Associated Classes", " Manage Student Access" }));
        jComboBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox8ActionPerformed(evt);
            }
        });

        jLabel59.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/ManagementMenuTitleResized.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Select A Task From the Drop Down Menu And Press Start.");

        jButton1.setText("Go");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(160, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(234, Short.MAX_VALUE)
                    .addComponent(jLabel59)
                    .addContainerGap(238, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(383, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(20, Short.MAX_VALUE)
                    .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(455, Short.MAX_VALUE)))
        );

        jPanel1.add(jPanel3);

        jPanel67.setBackground(new java.awt.Color(204, 204, 204));
        jPanel67.setOpaque(false);
        jPanel67.setPreferredSize(new java.awt.Dimension(898, 588));
        jPanel67.setLayout(new javax.swing.OverlayLayout(jPanel67));

        jPanel68.setOpaque(false);

        jLabel62.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel62.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/AttendanceScreenLoader.gif"))); // NOI18N

        javax.swing.GroupLayout jPanel68Layout = new javax.swing.GroupLayout(jPanel68);
        jPanel68.setLayout(jPanel68Layout);
        jPanel68Layout.setHorizontalGroup(
            jPanel68Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 873, Short.MAX_VALUE)
            .addGroup(jPanel68Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel68Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, 861, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel68Layout.setVerticalGroup(
            jPanel68Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 567, Short.MAX_VALUE)
            .addGroup(jPanel68Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel68Layout.createSequentialGroup()
                    .addContainerGap(179, Short.MAX_VALUE)
                    .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(40, 40, 40)))
        );

        jPanel67.add(jPanel68);

        jPanel69.setOpaque(false);

        jPanel18.setOpaque(false);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 26, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel69Layout = new javax.swing.GroupLayout(jPanel69);
        jPanel69.setLayout(jPanel69Layout);
        jPanel69Layout.setHorizontalGroup(
            jPanel69Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 873, Short.MAX_VALUE)
            .addGroup(jPanel69Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel69Layout.createSequentialGroup()
                    .addContainerGap(21, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );
        jPanel69Layout.setVerticalGroup(
            jPanel69Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 567, Short.MAX_VALUE)
            .addGroup(jPanel69Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel69Layout.createSequentialGroup()
                    .addContainerGap(525, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(16, Short.MAX_VALUE)))
        );

        jPanel67.add(jPanel69);

        jPanel1.add(jPanel67);

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setOpaque(false);
        jPanel6.setPreferredSize(new java.awt.Dimension(898, 588));

        jPanel5.setOpaque(false);
        jPanel5.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 873, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                    .addContainerGap(23, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 567, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                    .addContainerGap(186, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );

        jPanel1.add(jPanel6);

        jPanel4.setPreferredSize(new java.awt.Dimension(900, 588));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/BackgroundDirectoryScreen900x588.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(jPanel4);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 873, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 567, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel17);

        jTabbedPane1.addTab("Management", jPanel1);

        jPanel25.setBackground(new java.awt.Color(190, 217, 238));
        jPanel25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel25.setMaximumSize(new java.awt.Dimension(900, 588));
        jPanel25.setMinimumSize(new java.awt.Dimension(900, 588));
        jPanel25.setPreferredSize(new java.awt.Dimension(900, 588));
        jPanel25.setLayout(new javax.swing.OverlayLayout(jPanel25));

        jPanel26.setMaximumSize(new java.awt.Dimension(900, 656));
        jPanel26.setMinimumSize(new java.awt.Dimension(900, 656));
        jPanel26.setOpaque(false);
        jPanel26.setPreferredSize(new java.awt.Dimension(900, 588));
        jPanel26.setLayout(new javax.swing.OverlayLayout(jPanel26));
        jPanel25.add(jPanel26);

        jPanel27.setOpaque(false);
        jPanel27.setPreferredSize(new java.awt.Dimension(898, 588));

        jList1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jList1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane10.setViewportView(jList1);

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jPanel25.add(jPanel27);

        jPanel28.setBackground(new java.awt.Color(204, 204, 204));
        jPanel28.setOpaque(false);
        jPanel28.setPreferredSize(new java.awt.Dimension(898, 588));

        jLabel11.setFont(new java.awt.Font("Franklin Gothic Book", 0, 48)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/010.png"))); // NOI18N
        jLabel11.setToolTipText("");

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 838, Short.MAX_VALUE)
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 404, Short.MAX_VALUE)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jPanel25.add(jPanel28);

        jPanel30.setPreferredSize(new java.awt.Dimension(900, 588));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/BackgroundDirectoryScreen900x588.png"))); // NOI18N

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
            .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel30Layout.createSequentialGroup()
                    .addComponent(jLabel13)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel25.add(jPanel30);

        jTabbedPane1.addTab("Messages", jPanel25);

        jPanel31.setBackground(new java.awt.Color(190, 217, 238));
        jPanel31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel31.setMaximumSize(new java.awt.Dimension(900, 588));
        jPanel31.setMinimumSize(new java.awt.Dimension(900, 588));
        jPanel31.setPreferredSize(new java.awt.Dimension(900, 588));
        jPanel31.setLayout(new javax.swing.OverlayLayout(jPanel31));

        jPanel32.setMaximumSize(new java.awt.Dimension(900, 656));
        jPanel32.setMinimumSize(new java.awt.Dimension(900, 656));
        jPanel32.setOpaque(false);
        jPanel32.setPreferredSize(new java.awt.Dimension(900, 588));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/refreshIcon.png"))); // NOI18N
        jLabel12.setToolTipText("<html><center>Click To Refresh <font color=#091cff>By Class</font>: Class List<br></br>Should An Entry Be Missing. *NOTE: <br></br>Please Wait A Moment After Clicking*</center></html>");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });

        jLabel55.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/refreshIcon.png"))); // NOI18N
        jLabel55.setToolTipText("<html><center>Click To Refresh <font color=#09ff2e>By Student</font>: Class List<br></br>Should An Entry Be Missing. *NOTE: <br></br>Please Wait A Moment After Clicking*</center></html>");
        jLabel55.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel55MouseClicked(evt);
            }
        });

        jLabel57.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/AttendanceScreenLoader.gif"))); // NOI18N
        jLabel57.setToolTipText("<html><center>Click To Refresh <font color=#09ff2e>By Student</font>: Class List<br></br>Should An Entry Be Missing. *NOTE: <br></br>Please Wait A Moment After Clicking*</center></html>");
        jLabel57.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel57MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(jLabel12)
                .addContainerGap(627, Short.MAX_VALUE))
            .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel32Layout.createSequentialGroup()
                    .addGap(247, 247, 247)
                    .addComponent(jLabel55)
                    .addContainerGap(628, Short.MAX_VALUE)))
            .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel32Layout.createSequentialGroup()
                    .addGap(495, 495, 495)
                    .addComponent(jLabel57)
                    .addContainerGap(225, Short.MAX_VALUE)))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jLabel12)
                .addContainerGap(453, Short.MAX_VALUE))
            .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel32Layout.createSequentialGroup()
                    .addGap(279, 279, 279)
                    .addComponent(jLabel55)
                    .addContainerGap(352, Short.MAX_VALUE)))
            .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel32Layout.createSequentialGroup()
                    .addGap(205, 205, 205)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(271, Short.MAX_VALUE)))
        );

        jLabel57.setVisible(false);

        jPanel31.add(jPanel32);

        jPanel66.setMaximumSize(new java.awt.Dimension(900, 656));
        jPanel66.setMinimumSize(new java.awt.Dimension(900, 656));
        jPanel66.setOpaque(false);
        jPanel66.setPreferredSize(new java.awt.Dimension(900, 588));

        jLabel60.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/loaderGif25x25.gif"))); // NOI18N
        jLabel60.setToolTipText("<html><center>Click To Refresh <font color=#091cff>By Class</font>: Class List<br></br>Should An Entry Be Missing. *NOTE: <br></br>Please Wait A Moment After Clicking*</center></html>");
        jLabel60.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel60MouseClicked(evt);
            }
        });

        jLabel61.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/loaderGif25x25.gif"))); // NOI18N
        jLabel61.setToolTipText("<html><center>Click To Refresh <font color=#09ff2e>By Student</font>: Class List<br></br>Should An Entry Be Missing. *NOTE: <br></br>Please Wait A Moment After Clicking*</center></html>");
        jLabel61.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel61MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel66Layout = new javax.swing.GroupLayout(jPanel66);
        jPanel66.setLayout(jPanel66Layout);
        jPanel66Layout.setHorizontalGroup(
            jPanel66Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel66Layout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jLabel60)
                .addContainerGap(658, Short.MAX_VALUE))
            .addGroup(jPanel66Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel66Layout.createSequentialGroup()
                    .addGap(218, 218, 218)
                    .addComponent(jLabel61)
                    .addContainerGap(657, Short.MAX_VALUE)))
        );
        jPanel66Layout.setVerticalGroup(
            jPanel66Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel66Layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jLabel60)
                .addContainerGap(453, Short.MAX_VALUE))
            .addGroup(jPanel66Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel66Layout.createSequentialGroup()
                    .addGap(279, 279, 279)
                    .addComponent(jLabel61)
                    .addContainerGap(352, Short.MAX_VALUE)))
        );

        jPanel31.add(jPanel66);

        jPanel33.setOpaque(false);
        jPanel33.setPreferredSize(new java.awt.Dimension(898, 588));

        jTable6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Student ID", "Name", "Date", "Attendance", "Comments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable6.setRowHeight(30);
        jTable6.setRowMargin(7);
        jTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable6MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTable6);

        jLabel25.setIcon(new javax.swing.ImageIcon("/Users/tylerfontana/Downloads/ByClass.png")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Date:");

        jLabel26.setIcon(new javax.swing.ImageIcon("/Users/tylerfontana/Downloads/ByStudent.png")); // NOI18N

        jLabel27.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel27.setText("Class:");

        jLabel28.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Student:");

        jButton3.setIcon(new javax.swing.ImageIcon("/Users/tylerfontana/Downloads/ShowResultsButtonScaled.png")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(246, 246, 242));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Export Data Type:");

        jRadioButton1.setText("Excel Spreadsheet");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Word Document");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton2.setText("Export");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel10.setOpaque(false);

        jRadioButton3.setText("PDF Document");
        jRadioButton3.setToolTipText("<html><center>This Feature is<br></br>Currently Unavaliable.</center></html>");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setText("Text File");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 192, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel10Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jRadioButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(36, Short.MAX_VALUE)))
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel10Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jRadioButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(26, Short.MAX_VALUE)))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                    .addContainerGap(28, Short.MAX_VALUE)
                    .addComponent(jRadioButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(34, Short.MAX_VALUE)))
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                    .addGap(0, 55, Short.MAX_VALUE)
                    .addComponent(jRadioButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jRadioButton3.setVisible(false);
        jRadioButton3.setEnabled(false);
        jRadioButton4.setVisible(false);

        jLabel8.setIcon(new javax.swing.ImageIcon("/Users/tylerfontana/Downloads/VerticalDivider.png")); // NOI18N

        jPanel11.setOpaque(false);

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel15.setText("Student Name:");
        jLabel15.setToolTipText("");

        jLabel20.setForeground(new java.awt.Color(255, 51, 51));
        jLabel20.setText("Tyler Fontana");

        jLabel21.setForeground(new java.awt.Color(255, 51, 51));
        jLabel21.setText("01-02-1996");

        jLabel22.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel22.setText("Date:");

        jLabel23.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel23.setText("Comments:");

        jPanel12.setOpaque(false);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(204, 204, 204));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(2);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setMargin(new java.awt.Insets(0, 1, 0, 1));
        jTextArea1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextArea1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea1FocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea1);
        jTextArea1.setVisible(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 309, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 82, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(39, Short.MAX_VALUE)))
        );

        jScrollPane2.setVisible(false);

        jButton6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton6.setText("Save");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 296, Short.MAX_VALUE)))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                    .addContainerGap(104, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(133, 133, 133)))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                    .addGap(0, 309, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                    .addContainerGap(267, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(89, 89, 89)))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 286, Short.MAX_VALUE)))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                    .addContainerGap(82, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                    .addContainerGap(276, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 109, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 73, Short.MAX_VALUE)))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 73, Short.MAX_VALUE)))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 73, Short.MAX_VALUE)))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 72, Short.MAX_VALUE)))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(47, Short.MAX_VALUE)))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                    .addGap(0, 27, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                    .addContainerGap(74, Short.MAX_VALUE)
                    .addComponent(jButton6)
                    .addContainerGap()))
        );

        jLabel15.setVisible(false);
        jLabel20.setVisible(false);
        jLabel21.setVisible(false);
        jLabel22.setVisible(false);
        jLabel23.setVisible(false);
        jButton6.setVisible(false);

        jLabel58.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel58.setText("Attendance Status:");

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Absent", "Present", "NYE (Not Yet Added)" }));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(670, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(696, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(23, Short.MAX_VALUE)
                    .addComponent(jRadioButton1)
                    .addContainerGap(687, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(307, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(440, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(174, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(489, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(429, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(403, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(452, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(452, 452, 452)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(268, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(587, Short.MAX_VALUE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(132, 132, 132)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(78, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(26, Short.MAX_VALUE)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(35, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(16, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(81, Short.MAX_VALUE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(14, 14, 14)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(80, Short.MAX_VALUE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(14, 14, 14)))
        );

        jLabel3.setVisible(false);
        jRadioButton1.setVisible(false);
        jRadioButton2.setVisible(false);
        jButton2.setVisible(false);
        jLabel8.setVisible(false);
        jLabel58.setVisible(false);
        jComboBox7.setVisible(false);

        jPanel8.setOpaque(false);

        jLabel31.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText(" Date:");
        jLabel31.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        jPanel9.setOpaque(false);

        jComboBox1.setMaximumRowCount(500);
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setMaximumRowCount(500);
        jComboBox2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox2FocusGained(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setMaximumRowCount(500);
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });
        jComboBox3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox3FocusGained(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox4.setMaximumRowCount(500);
        jComboBox4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox4FocusGained(evt);
            }
        });
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jComboBox5.setMaximumRowCount(500);
        jComboBox5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox5FocusGained(evt);
            }
        });
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 154, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jComboBox1, 0, 142, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, 0, 142, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jComboBox3, 0, 142, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jComboBox4, javax.swing.GroupLayout.Alignment.TRAILING, 0, 142, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jComboBox5, javax.swing.GroupLayout.Alignment.TRAILING, 0, 154, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 195, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 168, Short.MAX_VALUE)))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(138, Short.MAX_VALUE)))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(98, 98, 98)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(70, Short.MAX_VALUE)))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                    .addContainerGap(128, Short.MAX_VALUE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(40, 40, 40)))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                    .addContainerGap(162, Short.MAX_VALUE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jComboBox2.setEnabled(false);
        jComboBox4.setEnabled(false);
        jComboBox5.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(186, Short.MAX_VALUE)))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                    .addContainerGap(86, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                    .addGap(0, 163, Short.MAX_VALUE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Class:");

        jLabel29.setIcon(new javax.swing.ImageIcon("/Users/tylerfontana/Downloads/styleLine.png")); // NOI18N

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addContainerGap(42, Short.MAX_VALUE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel33Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel33Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addGap(27, 27, 27)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(789, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(651, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                    .addContainerGap(71, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(677, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                    .addContainerGap(10, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(607, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addGap(27, 27, 27)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(779, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addGap(105, 105, 105)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(102, Short.MAX_VALUE)))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(129, Short.MAX_VALUE))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addGap(244, 244, 244)
                    .addComponent(jLabel4)
                    .addContainerGap(307, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addGap(268, 268, 268)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(259, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                    .addContainerGap(396, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(141, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                    .addContainerGap(438, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                    .addContainerGap(204, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(176, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addGap(209, 209, 209)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(332, Short.MAX_VALUE)))
            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel33Layout.createSequentialGroup()
                    .addGap(94, 94, 94)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(422, Short.MAX_VALUE)))
        );

        jPanel31.add(jPanel33);

        jPanel34.setBackground(new java.awt.Color(204, 204, 204));
        jPanel34.setOpaque(false);
        jPanel34.setPreferredSize(new java.awt.Dimension(898, 588));

        jLabel14.setFont(new java.awt.Font("Franklin Gothic Book", 0, 48)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 255));
        jLabel14.setIcon(new javax.swing.ImageIcon("/Users/tylerfontana/Downloads/AttendanceRecordsResized.png")); // NOI18N
        jLabel14.setToolTipText("");

        jPanel35.setOpaque(false);

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 845, Short.MAX_VALUE)
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 494, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(169, 169, 169))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel31.add(jPanel34);

        jPanel36.setPreferredSize(new java.awt.Dimension(900, 588));

        jLabel16.setIcon(new javax.swing.ImageIcon("/Users/tylerfontana/Downloads/BackgroundDirectoryScreen900x588.png")); // NOI18N

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
            .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel36Layout.createSequentialGroup()
                    .addComponent(jLabel16)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel31.add(jPanel36);

        jTabbedPane1.addTab("Records", jPanel31);

        jPanel37.setBackground(new java.awt.Color(190, 217, 238));
        jPanel37.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel37.setMaximumSize(new java.awt.Dimension(900, 588));
        jPanel37.setMinimumSize(new java.awt.Dimension(900, 588));
        jPanel37.setPreferredSize(new java.awt.Dimension(900, 588));
        jPanel37.setLayout(new javax.swing.OverlayLayout(jPanel37));

        jPanel38.setMaximumSize(new java.awt.Dimension(900, 656));
        jPanel38.setMinimumSize(new java.awt.Dimension(900, 656));
        jPanel38.setOpaque(false);
        jPanel38.setPreferredSize(new java.awt.Dimension(900, 588));

        jLabel56.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/refreshIcon.png"))); // NOI18N
        jLabel56.setToolTipText("<html><center>Click To Refresh The <font color=ff0c00>Class List</font><br></br>Should An Entry Be Missing. *NOTE: <br></br>Please Wait A Moment After Clicking*</center></html>\n");
        jLabel56.setSize(new java.awt.Dimension(25, 25));
        jLabel56.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel56MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel38Layout.createSequentialGroup()
                    .addGap(558, 558, 558)
                    .addComponent(jLabel56)
                    .addContainerGap(317, Short.MAX_VALUE)))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 656, Short.MAX_VALUE)
            .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel38Layout.createSequentialGroup()
                    .addGap(310, 310, 310)
                    .addComponent(jLabel56)
                    .addContainerGap(321, Short.MAX_VALUE)))
        );

        jLabel56.setVisible(true);

        jPanel37.add(jPanel38);

        jPanel40.setBackground(new java.awt.Color(204, 204, 204));
        jPanel40.setOpaque(false);
        jPanel40.setPreferredSize(new java.awt.Dimension(898, 588));

        jLabel17.setFont(new java.awt.Font("Franklin Gothic Book", 0, 48)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 255));
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/ConnectedStudentInformation.png"))); // NOI18N
        jLabel17.setToolTipText("");

        jToggleButton7.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jToggleButton7.setText("Open Server");
        jToggleButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton7ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jButton7.setText("Mark Attendance");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("jLabel1");

        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("Participants:");

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 838, Short.MAX_VALUE)
            .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel41Layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addComponent(jToggleButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(575, Short.MAX_VALUE)))
            .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                    .addContainerGap(578, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(15, 15, 15)))
            .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                    .addContainerGap(261, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(258, Short.MAX_VALUE)))
            .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                    .addContainerGap(261, Short.MAX_VALUE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(257, 257, 257)))
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 78, Short.MAX_VALUE)
            .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                    .addContainerGap(16, Short.MAX_VALUE)
                    .addComponent(jToggleButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(15, 15, 15)))
            .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                    .addContainerGap(15, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(14, 14, 14)))
            .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                    .addContainerGap(18, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(36, Short.MAX_VALUE)))
            .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                    .addContainerGap(37, Short.MAX_VALUE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(16, 16, 16)))
        );

        jLabel18.setVisible(false);

        jPanel52.setBackground(new java.awt.Color(255, 255, 255));
        jPanel52.setOpaque(false);

        jPanel53.setBackground(new java.awt.Color(204, 204, 204));
        jPanel53.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel51.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 255, 255));
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("Please Select The Class");

        jButton9.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton9.setText("Continue");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel52.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 255, 255));
        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel52.setText("You Want To Mark ");

        jLabel53.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 255, 255));
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setText("Attendance For:");

        jLabel54.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/carbonfiber338x229.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel54Layout = new javax.swing.GroupLayout(jPanel54);
        jPanel54.setLayout(jPanel54Layout);
        jPanel54Layout.setHorizontalGroup(
            jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
            .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 332, Short.MAX_VALUE))
        );
        jPanel54Layout.setVerticalGroup(
            jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 224, Short.MAX_VALUE)
            .addGroup(jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 224, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel53Layout = new javax.swing.GroupLayout(jPanel53);
        jPanel53.setLayout(jPanel53Layout);
        jPanel53Layout.setHorizontalGroup(
            jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel53Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel53Layout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(77, Short.MAX_VALUE)))
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel53Layout.createSequentialGroup()
                    .addGap(112, 112, 112)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(106, Short.MAX_VALUE)))
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel53Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel53Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel53Layout.setVerticalGroup(
            jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 224, Short.MAX_VALUE)
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel53Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(145, Short.MAX_VALUE)))
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel53Layout.createSequentialGroup()
                    .addGap(115, 115, 115)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(82, Short.MAX_VALUE)))
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel53Layout.createSequentialGroup()
                    .addGap(157, 157, 157)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(24, Short.MAX_VALUE)))
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel53Layout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(135, Short.MAX_VALUE)))
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel53Layout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(128, Short.MAX_VALUE)))
            .addGroup(jPanel53Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel54, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel52Layout = new javax.swing.GroupLayout(jPanel52);
        jPanel52.setLayout(jPanel52Layout);
        jPanel52Layout.setHorizontalGroup(
            jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 849, Short.MAX_VALUE)
            .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel52Layout.createSequentialGroup()
                    .addContainerGap(245, Short.MAX_VALUE)
                    .addComponent(jPanel53, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(260, Short.MAX_VALUE)))
        );
        jPanel52Layout.setVerticalGroup(
            jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
            .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel52Layout.createSequentialGroup()
                    .addContainerGap(89, Short.MAX_VALUE)
                    .addComponent(jPanel53, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(56, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                    .addContainerGap(19, Short.MAX_VALUE)
                    .addComponent(jPanel52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 363, Short.MAX_VALUE)
                .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                    .addContainerGap(92, Short.MAX_VALUE)
                    .addComponent(jPanel52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(95, Short.MAX_VALUE)))
        );

        jPanel37.add(jPanel40);

        jPanel39.setOpaque(false);
        jPanel39.setPreferredSize(new java.awt.Dimension(898, 588));

        jTable7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable7.setRowHeight(90);
        jTable7.setRowMargin(7);
        jTable7.setShowGrid(false);
        jScrollPane7.setViewportView(jTable7);

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 845, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        jPanel37.add(jPanel39);

        jPanel42.setPreferredSize(new java.awt.Dimension(900, 588));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/BackgroundDirectoryScreen900x588Regular.png"))); // NOI18N

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 588, Short.MAX_VALUE)
            .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel42Layout.createSequentialGroup()
                    .addComponent(jLabel19)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel37.add(jPanel42);

        jTabbedPane1.addTab("Attendance", jPanel37);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if (jRadioButton1.isSelected() == true && jRadioButton2.isSelected() == true) {
            jRadioButton1.setSelected(false);
        }
        
        if (jRadioButton3.isSelected() == true && jRadioButton2.isSelected() == true) {
            jRadioButton3.setSelected(false);
        }
        
        if (jRadioButton4.isSelected() == true && jRadioButton2.isSelected() == true) {
            jRadioButton4.setSelected(false);
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        System.out.println("MainScreen 1");
        
        serverTracker.setMainScreenInstance(this);
        classInstanceTracker.setMainScreenInstance(this);
        
        System.out.println("MainScreen 2");
        
        setWelcomeScreenComponentVisibility(false);
        
        TaskHandler handler = new TaskHandler(0);
        handler.execute();
        
        System.out.println("MainScreen 3");
        
        jTabbedPane1.setEnabled(false);
        
        System.out.println("MainScreen 4");
        
        /*
        jPanel50.revalidate();
        jPanel50.repaint();
        
        jPanel57.revalidate();
        jPanel57.repaint();
        
        jPanel48.revalidate();
        jPanel48.repaint();
        
        jPanel49.revalidate();
        jPanel49.repaint();
        */

        /*
        jLayeredPane1.setLayer(jLabel48, Integer.valueOf(2), -1);
        jLayeredPane1.setLayer(jLabel41, Integer.valueOf(2), 2);
        jLayeredPane1.setLayer(jButton5, Integer.valueOf(2), 1);
        jLayeredPane1.setLayer(jPanel64, Integer.valueOf(2), 0);
 
        jLayeredPane1.setLayer(jPanel58, Integer.valueOf(3), -1);
        jLayeredPane1.setLayer(jPanel59, Integer.valueOf(3), 0);
        jLayeredPane1.setLayer(jPanel60, Integer.valueOf(3), 1);
        jLayeredPane1.setLayer(jPanel61, Integer.valueOf(3), 2);
        jLayeredPane1.setLayer(jPanel62, Integer.valueOf(3), 3);
        jLayeredPane1.setLayer(jPanel63, Integer.valueOf(3), 4);
        jLayeredPane1.setLayer(jPanel65, Integer.valueOf(3), 5);
        
        jLayeredPane1.setLayer(jLabel42, Integer.valueOf(4), -1);
        jLayeredPane1.setLayer(jLabel43, Integer.valueOf(4), 0);
        jLayeredPane1.setLayer(jLabel44, Integer.valueOf(4), 1);
        jLayeredPane1.setLayer(jLabel45, Integer.valueOf(4), 2);
        jLayeredPane1.setLayer(jLabel46, Integer.valueOf(4), 3);
        jLayeredPane1.setLayer(jLabel47, Integer.valueOf(4), 4);
        jLayeredPane1.setLayer(jLabel49, Integer.valueOf(4), 5);
        
        //jLayeredPane1.revalidate();
        jLayeredPane1.repaint();
        */
        
        /*
        jLayeredPane1.setLayer(jPanel50, Integer.valueOf(1), -1);
        jLayeredPane1.setLayer(jLabel48, Integer.valueOf(2), 0);
        
        jLayeredPane1.setLayer(jPanel57, Integer.valueOf(1), 1);
        jLayeredPane1.setLayer(jPanel64, Integer.valueOf(2), 0);
        
        jLayeredPane1.setLayer(jPanel58, Integer.valueOf(3), 0);
        jLayeredPane1.setLayer(jPanel59, Integer.valueOf(3), 1);
        jLayeredPane1.setLayer(jPanel60, Integer.valueOf(3), 2);
        jLayeredPane1.setLayer(jPanel61, Integer.valueOf(3), 3);
        jLayeredPane1.setLayer(jPanel62, Integer.valueOf(3), 4);
        jLayeredPane1.setLayer(jPanel63, Integer.valueOf(3), 5);
        jLayeredPane1.setLayer(jPanel65, Integer.valueOf(3), 6);
        
        jLayeredPane1.setLayer(jLabel42, Integer.valueOf(4), 0);
        jLayeredPane1.setLayer(jLabel43, Integer.valueOf(4), 1);
        jLayeredPane1.setLayer(jLabel44, Integer.valueOf(4), 2);
        jLayeredPane1.setLayer(jLabel45, Integer.valueOf(4), 3);
        jLayeredPane1.setLayer(jLabel46, Integer.valueOf(4), 4);
        jLayeredPane1.setLayer(jLabel47, Integer.valueOf(4), 5);
        jLayeredPane1.setLayer(jLabel48, Integer.valueOf(4), 6);
        jLayeredPane1.setLayer(jLabel49, Integer.valueOf(4), 7);
        
        jLayeredPane1.setLayer(jPanel49, Integer.valueOf(20), 0);
        jLayeredPane1.setLayer(jButton5, Integer.valueOf(21), 0);
        
        jLayeredPane1.setLayer(jPanel48, Integer.valueOf(22), 0);
        jLayeredPane1.setLayer(jLabel41, Integer.valueOf(23), 0);
        
        jLayeredPane1.revalidate();
        jLayeredPane1.repaint();
        
        System.out.println("Highest Layer: " + jLayeredPane1.highestLayer());
        System.out.println("Lowest Layer: " + jLayeredPane1.lowestLayer());
        */
        /*
        jLayeredPane1.setLayer(jPanel50, JLayeredPane.PALETTE_LAYER, -1);
        jLayeredPane1.setLayer(jPanel48, JLayeredPane.PALETTE_LAYER, 2);
        jLayeredPane1.setLayer(jPanel49, JLayeredPane.PALETTE_LAYER, 1);
        jLayeredPane1.setLayer(jPanel57, JLayeredPane.PALETTE_LAYER, 0);
        */
        /*
        jLayeredPane1.setLayer(jLabel48, JLayeredPane.MODAL_LAYER, -1);
        jLayeredPane1.setLayer(jLabel49, JLayeredPane.MODAL_LAYER, 0);
        
        jLayeredPane1.setLayer(jLabel41, JLayeredPane.DRAG_LAYER, 6);
        jLayeredPane1.setLayer(jButton5, JLayeredPane.DRAG_LAYER, 5);
        jLayeredPane1.setLayer(jLabel42, JLayeredPane.DRAG_LAYER, 4);
        jLayeredPane1.setLayer(jLabel43, JLayeredPane.DRAG_LAYER, 3);
        jLayeredPane1.setLayer(jLabel44, JLayeredPane.DRAG_LAYER, 2);
        jLayeredPane1.setLayer(jLabel45, JLayeredPane.DRAG_LAYER, 1);
        jLayeredPane1.setLayer(jLabel46, JLayeredPane.DRAG_LAYER, 0);
        jLayeredPane1.setLayer(jLabel47, JLayeredPane.DRAG_LAYER, -1);
        
        System.out.println("Highest Layer: " + jLayeredPane1.highestLayer());
        
        jLayeredPane1.repaint();*/
        /*
        jLayeredPane1.add(jPanel50, javax.swing.JLayeredPane.PALETTE_LAYER);
        
        jLayeredPane1.add(jPanel48, javax.swing.JLayeredPane.MODAL_LAYER);
        jLayeredPane1.add(jPanel49, javax.swing.JLayeredPane.MODAL_LAYER);
        jLayeredPane1.add(jPanel57, javax.swing.JLayeredPane.MODAL_LAYER);
        
        jLayeredPane1.add(jLabel48, javax.swing.JLayeredPane.POPUP_LAYER);
        
        jLayeredPane1.add(jLabel49, javax.swing.JLayeredPane.DRAG_LAYER);
        
        jLayeredPane1.add(jLabel49, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jLabel41, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jButton5, javax.swing.JLayeredPane.DRAG_LAYER);
        
        jLayeredPane1.add(jLabel42, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jLabel43, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jLabel44, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jLabel45, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jLabel46, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jLabel47, javax.swing.JLayeredPane.DRAG_LAYER);
        
        /*
        jLayeredPane1.add(jLabel48, javax.swing.JLayeredPane.MODAL_LAYER);
        
        jLayeredPane1.add(jLabel49, javax.swing.JLayeredPane.POPUP_LAYER);
        
        jLayeredPane1.add(jLabel49, javax.swing.JLayeredPane.POPUP_LAYER);
        jLayeredPane1.add(jLabel41, javax.swing.JLayeredPane.POPUP_LAYER);
        jLayeredPane1.add(jButton5, javax.swing.JLayeredPane.POPUP_LAYER);
        
        jLayeredPane1.add(jLabel42, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jLabel43, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jLabel44, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jLabel45, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jLabel46, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane1.add(jLabel47, javax.swing.JLayeredPane.DRAG_LAYER);
        */
    }//GEN-LAST:event_formWindowOpened

    private void EditProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditProfileButtonActionPerformed
        EditProfileScreen edit = new EditProfileScreen();
        CreateImageFromText cift = new CreateImageFromText();
        
        int size = cift.determineFontSizeAmericanCaptain(tracker.getCurrentInstructorInformation().getInstructorDisplayName(), 272, 56, 55);
        edit.jLabel3.setFont(new java.awt.Font("American Captain", 0, size));
        
        edit.setVisible(true);
    }//GEN-LAST:event_EditProfileButtonActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Server server = serverTracker.getCurrentServerInstance();
        
        if (server != null) {
            server.stopServer();
        }
        
        tracker.setApplicationClosingStatus(true);
    }//GEN-LAST:event_formWindowClosed

    private void jToggleButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton7ActionPerformed
        if (jToggleButton7.isSelected() == true && jToggleButton7.getText().equalsIgnoreCase("Open Server")) {
            SpecifyServerDetails details = new SpecifyServerDetails();
            
            details.jTextField2.setText(ipAddress);
            details.setVisible(true);
        }
        else if (jToggleButton7.isSelected() == false && jToggleButton7.getText().equalsIgnoreCase("Close Server")) {
            
            serverTracker.setMainScreenInstance(this);
            
            DeleteServerQuestion dsq = new DeleteServerQuestion();
            dsq.setVisible(true);
            
            jToggleButton7.setSelected(true);
        }
    }//GEN-LAST:event_jToggleButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // This is the ChooseClassButton
        
        ClassType value = jComboBox6.getItemAt(jComboBox6.getSelectedIndex());
        
        if (value.getClassTitle().equalsIgnoreCase(" ---------------------- ")) {
            WarningMessageAttendanceServerCS warn = new WarningMessageAttendanceServerCS();
            
            jComboBox6.setEnabled(false);
            jButton9.setEnabled(false);
            
            warn.setVisible(true);
        }
        else if (value.getClassTitle().equalsIgnoreCase(" --- No Associated Classes --- ")) {
            WarningMessageAttendanceServerNAC warn = new WarningMessageAttendanceServerNAC();
            
            jComboBox6.setEnabled(false);
            jButton9.setEnabled(false);
            
            warn.setVisible(true);
        }
        else {
            tracker.setChoosenAttendanceClassType(value);
            
            ClassSelected classSelected = new ClassSelected();
            classSelected.jLabel6.setText(value.getClassTitle());
            classSelected.setVisible(true);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
        if (jTable7.getModel().getRowCount() == 0) {
            MarkAttendanceEmtpyServerWarning maesw = new MarkAttendanceEmtpyServerWarning();
            maesw.setVisible(true);
        }
        else {
            ArrayList<AttendanceRecord> recordsList = new ArrayList<>();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM/dd/yyyy");
            LocalDateTime now = LocalDateTime.now();

            for (int i = 0; i < jTable7.getModel().getRowCount(); i++) {
                //System.out.println()
                CustomJTableModel model = (CustomJTableModel) jTable7.getModel();
                int studentId = (int) model.getValueAt(i, 2);

                AttendanceRecord record = new AttendanceRecord(0, tracker.getChoosenAttendanceClassType().getClassID(), tracker.getCurrentInstructorInformation().getInstructorID(), studentId, "Present", dtf.format(now), "");
                recordsList.add(record);
            }
            
            MarkAttendanceConfirmation mac = new MarkAttendanceConfirmation(recordsList);
            mac.setVisible(true); 
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        new TaskHandler(7).execute();
        
        setAttendanceRecordsLoadingImageBCVisibility(true);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if (jComboBox2.isEnabled() == true) {
            int selectedIndex = jComboBox2.getSelectedIndex();
            recordsType.setDate(jComboBox2.getItemAt(selectedIndex));
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        new TaskHandler(8).execute();
        setAttendanceRecordsLoadingImageBSVisibility(true);
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        new TaskHandler(9).execute();
        setAttendanceRecordsLoadingImageBSVisibility(true);
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        
        jComboBox4.setEnabled(false);
        jComboBox5.setEnabled(false);
        
        alterRecordsScreenComponentView(false);
        
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
        
        if (defaultTableModelInUse == false) {
            jTable6.setModel(defaultModel);
            
            showOrHideExportDataOptionBox(false);
            jLabel8.setVisible(false);
        }
        
        ArrayList<StudentRecordsTabObject> emptyStudentsNameList = new ArrayList<>();
        ArrayList<String> emptyDatesByStudentList = new ArrayList<>();
        
        DefaultComboBoxModel emptyStudentsModel = new DefaultComboBoxModel(emptyStudentsNameList.toArray());
        jComboBox4.setModel(emptyStudentsModel);
        jComboBox4.setSelectedIndex(-1);
        
        DefaultComboBoxModel emptyDatesByStudentModel = new DefaultComboBoxModel(emptyDatesByStudentList.toArray());
        jComboBox5.setModel(emptyDatesByStudentModel);
        jComboBox5.setSelectedIndex(-1);

        jComboBox3.setSelectedIndex(0);
        
        recordsType.setSearchType(0);
    }//GEN-LAST:event_jComboBox1FocusGained

    private void jComboBox3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox3FocusGained
        
        jComboBox2.setEnabled(false);
        
        alterRecordsScreenComponentView(false);
        
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
        
        if (defaultTableModelInUse == false) {
            jTable6.setModel(defaultModel);
            
            showOrHideExportDataOptionBox(false);
            jLabel8.setVisible(false);
        }
        
        ArrayList<String> emptyDatesList = new ArrayList<>();
        
        DefaultComboBoxModel emptyDatesModel = new DefaultComboBoxModel(emptyDatesList.toArray());
        jComboBox2.setModel(emptyDatesModel);
        jComboBox2.setSelectedIndex(-1);

        jComboBox1.setSelectedIndex(0);
        
        recordsType.setSearchType(1);
    }//GEN-LAST:event_jComboBox3FocusGained

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jLabel55MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel55MouseClicked
        jComboBox3.setEnabled(false);
        jLabel61.setVisible(true);
        
        TaskHandler handler = new TaskHandler(3);
        handler.execute();
    }//GEN-LAST:event_jLabel55MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        jComboBox1.setEnabled(false);
        jLabel60.setVisible(true);
        
        TaskHandler handler = new TaskHandler(2);
        handler.execute();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel56MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel56MouseClicked
        jComboBox6.setEnabled(false);
        
        TaskHandler handler = new TaskHandler(6);
        handler.execute();
    }//GEN-LAST:event_jLabel56MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jLabel57.setVisible(true);
        
        TaskHandler handler = new TaskHandler(4);
        handler.execute();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusGained
        alterRecordsScreenComponentView(false);
        
        if (defaultTableModelInUse == false) {
            jTable6.setModel(defaultModel);
            
            showOrHideExportDataOptionBox(false);
            jLabel8.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox2FocusGained

    private void jComboBox4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox4FocusGained
        alterRecordsScreenComponentView(false);
        
        if (defaultTableModelInUse == false) {
            jTable6.setModel(defaultModel);
            
            showOrHideExportDataOptionBox(false);
            jLabel8.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox4FocusGained

    private void jComboBox5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox5FocusGained
        alterRecordsScreenComponentView(false);
        
        if (defaultTableModelInUse == false) {
            jTable6.setModel(defaultModel);
            
            showOrHideExportDataOptionBox(false);
            jLabel8.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox5FocusGained

    private void jTable6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable6MouseClicked
        if (defaultTableModelInUse == false) {
            
            int row = jTable6.rowAtPoint(evt.getPoint());
            recordsJTableCurrentIndexRowSelected = row;
            
            // If JTable6 is ByStudentJTableObject Table Model
            if (jTable6.getColumnClass(1) == String.class) {
                
                CustomJTableModelAttendanceRecordsByStudent studentTableModel = (CustomJTableModelAttendanceRecordsByStudent) jTable6.getModel();
                
                ByStudentJTableObject value = studentTableModel.getList().get(row);
                System.out.println("ClickListener ByStudent: " + value.getDate());
                
                jLabel20.setText(recordsType.getStudentName());
                jLabel21.setText(value.getDate());
                
                System.out.println("Row Number: " + row);
                
                if (commentsList.get(row).equalsIgnoreCase("")) {
                    jTextArea1.setForeground(new java.awt.Color(204, 204, 204));
                    jTextArea1.setText("Enter Comments on This Particular Student's Conduct During This Class Period.");
                }
                else {
                    jTextArea1.setForeground(new java.awt.Color(0, 0, 0));
                    jTextArea1.setText(commentsList.get(row));
                }
                
                System.out.println("Attendance Status By Student: " + value.getStudentStatus());
                
                if (value.getStudentStatus().equalsIgnoreCase("Absent")) {
                    jComboBox7.setSelectedIndex(0);
                }
                else if (value.getStudentStatus().equalsIgnoreCase("Present")) {
                    jComboBox7.setSelectedIndex(1);
                }
                else if (value.getStudentStatus().equalsIgnoreCase("NYA")) {
                    jComboBox7.setSelectedIndex(2);
                }
                
                alterRecordsScreenComponentView(true);
                jLabel8.setVisible(true);
                
            }
            // If JTable6 is ByClassJTableObject Table Model
            else {
                
                CustomJTableModelAttendanceRecordsByClass studentTableModel = (CustomJTableModelAttendanceRecordsByClass) jTable6.getModel();
                
                ByClassJTableObject value = studentTableModel.getList().get(row);
                System.out.println("ClickListener ByClass: " + value.getStudentName());
                
                jLabel20.setText(value.getStudentName());
                jLabel21.setText(recordsType.getDate());
                
                if (commentsList.get(row).equalsIgnoreCase("")) {
                    jTextArea1.setForeground(new java.awt.Color(204, 204, 204));
                    jTextArea1.setText("Enter Comments on This Particular Student's Conduct During This Class Period.");
                }
                else {
                    jTextArea1.setForeground(new java.awt.Color(0, 0, 0));
                    jTextArea1.setText(commentsList.get(row));
                }
                
                System.out.println("Attendance Status By Class: " + value.getStudentStatus());
                
                if (value.getStudentStatus().equalsIgnoreCase("Absent")) {
                    jComboBox7.setSelectedIndex(0);
                }
                else if (value.getStudentStatus().equalsIgnoreCase("Present")) {
                    jComboBox7.setSelectedIndex(1);
                }
                else if (value.getStudentStatus().equalsIgnoreCase("NYA")) {
                    jComboBox7.setSelectedIndex(2);
                }
                
                alterRecordsScreenComponentView(true);
                //jLabel18.setVisible(true);
            }
        }
    }//GEN-LAST:event_jTable6MouseClicked

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        if (jComboBox5.isEnabled() == true) {
            int selectedIndex = jComboBox5.getSelectedIndex();
            recordsType.setDate(jComboBox5.getItemAt(selectedIndex));
        }
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jLabel57MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel57MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel57MouseClicked

    private void jTextArea1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea1FocusGained
        if (jTextArea1.getText().equalsIgnoreCase("Enter Comments on This Particular Student's Conduct During This Class Period.")) {
            jTextArea1.setForeground(new java.awt.Color(0, 0, 0));
            jTextArea1.setText("");
        }
    }//GEN-LAST:event_jTextArea1FocusGained

    private void jTextArea1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea1FocusLost
        if (jTextArea1.getText().equalsIgnoreCase("")) {
            jTextArea1.setForeground(new java.awt.Color(204, 204, 204));
            jTextArea1.setText("Enter Comments on This Particular Student's Conduct During This Class Period.");
        }
    }//GEN-LAST:event_jTextArea1FocusLost

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jLabel57.setVisible(true);
        setRecordsScreenAttendanceAlteringComponentsEnabled(false);
        
        new TaskHandler(5).execute();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if (jRadioButton2.isSelected() == true && jRadioButton1.isSelected() == true) {
            jRadioButton2.setSelected(false);
        }
        
        if (jRadioButton3.isSelected() == true && jRadioButton1.isSelected() == true) {
            jRadioButton3.setSelected(false);
        }
        
        if (jRadioButton4.isSelected() == true && jRadioButton1.isSelected() == true) {
            jRadioButton4.setSelected(false);
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        if (jRadioButton1.isSelected() == true && jRadioButton3.isSelected() == true) {
            jRadioButton1.setSelected(false);
        }
        
        if (jRadioButton2.isSelected() == true && jRadioButton3.isSelected() == true) {
            jRadioButton2.setSelected(false);
        }
        
        if (jRadioButton4.isSelected() == true && jRadioButton3.isSelected() == true) {
            jRadioButton4.setSelected(false);
        }
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        if (jRadioButton1.isSelected() == true && jRadioButton4.isSelected() == true) {
            jRadioButton1.setSelected(false);
        }
        
        if (jRadioButton2.isSelected() == true && jRadioButton4.isSelected() == true) {
            jRadioButton2.setSelected(false);
        }
        
        if (jRadioButton3.isSelected() == true && jRadioButton4.isSelected() == true) {
            jRadioButton3.setSelected(false);
        }
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        ArrayList<String> exportType = new ArrayList<>();
        String pathAndFileName = "";
        
        if (jRadioButton1.isSelected() == true) {
            exportType.add("Excel Spreadsheet (.xlsx)");
            exportType.add(".xlsx");
            
            CustomJFileChooser chooser = new CustomJFileChooser(exportType);
            chooser.createJFileChooserPanel();
            pathAndFileName = chooser.getNameAndPath();
            
            if (pathAndFileName.equalsIgnoreCase("")) {
                System.out.println("This is the Path and File Name: " + pathAndFileName);
                //Error Screen
            }
            else {
                System.out.println("This is the Path and File Name: " + pathAndFileName);
                
                ExportFileLoader loader = new ExportFileLoader();
                loader.setVisible(true);
                
                if (recordsType.getSearchType() == 0) {
                    CustomJTableModelAttendanceRecordsByClass model = (CustomJTableModelAttendanceRecordsByClass) jTable6.getModel();
                    ArrayList<ByClassJTableObject> jTableModelList = model.getList();

                    boolean result = exportClass.createXMLDocumentByClass(pathAndFileName, recordsType, jComboBox1.getItemAt(jComboBox1.getSelectedIndex()).getClassTitle(), jTableModelList, commentsList);
                    
                    loader.dispose();
                }
                // By Student Search
                else if (recordsType.getSearchType() == 1) {
                    CustomJTableModelAttendanceRecordsByStudent model = (CustomJTableModelAttendanceRecordsByStudent) jTable6.getModel();
                    ArrayList<ByStudentJTableObject> jTableModelList = model.getList();

                    boolean result = exportClass.createXMLDocumentByStudent(pathAndFileName, recordsType, jComboBox3.getItemAt(jComboBox3.getSelectedIndex()).getClassTitle(), jTableModelList, commentsList);
                    
                    loader.dispose();
                }
            }
        }
        else if (jRadioButton2.isSelected() == true) {
            exportType.add("Word Document (.docx)");
            exportType.add(".docx");
            exportType.add(".doc");
            exportType.add(".dotx");
            
            CustomJFileChooser chooser = new CustomJFileChooser(exportType);
            chooser.createJFileChooserPanel();
            pathAndFileName = chooser.getNameAndPath();
            
            if (pathAndFileName.equalsIgnoreCase("")) {
                System.out.println("This is the Path and File Name: " + pathAndFileName);
            }
            else {
                System.out.println("This is the Path and File Name: " + pathAndFileName);
                
                ExportFileLoader loader = new ExportFileLoader();
                loader.setVisible(true);
                
                if (recordsType.getSearchType() == 0) {
                    CustomJTableModelAttendanceRecordsByClass model = (CustomJTableModelAttendanceRecordsByClass) jTable6.getModel();
                    ArrayList<ByClassJTableObject> jTableModelList = model.getList();

                    boolean result = exportClass.createWordDocumentByClass(pathAndFileName, recordsType, jComboBox1.getItemAt(jComboBox1.getSelectedIndex()).getClassTitle(), jTableModelList, commentsList);
                    
                    loader.dispose();
                }
                // By Student Search
                else if (recordsType.getSearchType() == 1) {
                    CustomJTableModelAttendanceRecordsByStudent model = (CustomJTableModelAttendanceRecordsByStudent) jTable6.getModel();
                    ArrayList<ByStudentJTableObject> jTableModelList = model.getList();

                    boolean result = exportClass.createWordDocumentByStudent(pathAndFileName, recordsType, jComboBox3.getItemAt(jComboBox3.getSelectedIndex()).getClassTitle(), jTableModelList, commentsList);
                    
                    loader.dispose();
                }
                
            }
        }
        else if (jRadioButton3.isSelected() == true) {
            exportType.add("PDF Document (.pdf)");
            exportType.add(".pdf");
            
            CustomJFileChooser chooser = new CustomJFileChooser(exportType);
            chooser.createJFileChooserPanel();
            pathAndFileName = chooser.getNameAndPath();
            String tempFileName = pathAndFileName.replace(".pdf", "");
            
            if (pathAndFileName.equalsIgnoreCase("")) {
                System.out.println("This is the Path and File Name: " + pathAndFileName);
                // Error Class
                //ExportTableDataToExternalFile exportToFile = new ExportTableDataToExternalFile();
            }
            else {
                System.out.println("This is the Path and File Name: " + tempFileName);
                
                ExportFileLoader loader = new ExportFileLoader();
                loader.setVisible(true);
                
                // By Class Search
                if (recordsType.getSearchType() == 0) {
                    CustomJTableModelAttendanceRecordsByClass model = (CustomJTableModelAttendanceRecordsByClass) jTable6.getModel();
                    ArrayList<ByClassJTableObject> jTableModelList = model.getList();

                    //boolean result = exportClass.createWordDocumentByClass(tempFileName, recordsType, jComboBox3.getItemAt(jComboBox1.getSelectedIndex()).getClassTitle(), jTableModelList, commentsList);
                    
                    loader.dispose();
                }
                // By Student Search
                else if (recordsType.getSearchType() == 1) {
                    CustomJTableModelAttendanceRecordsByStudent model = (CustomJTableModelAttendanceRecordsByStudent) jTable6.getModel();
                    ArrayList<ByStudentJTableObject> jTableModelList = model.getList();

                    boolean result = exportClass.createPDFDocumentByStudent(tempFileName, recordsType, jComboBox3.getItemAt(jComboBox3.getSelectedIndex()).getClassTitle(), jTableModelList, commentsList);
                    
                    loader.dispose();
                }
            }
        }
        else if (jRadioButton4.isSelected() == true) {
            exportType.add("Text File (.txt)");
            exportType.add(".txt");
            exportType.add(".text");
            
            CustomJFileChooser chooser = new CustomJFileChooser(exportType);
            chooser.createJFileChooserPanel();
            pathAndFileName = chooser.getNameAndPath();
            
            if (pathAndFileName.equalsIgnoreCase("")) {
                System.out.println("This is the Path and File Name: " + pathAndFileName);
                
            }
            else {
                System.out.println("This is the Path and File Name: " + pathAndFileName);
                
                ExportFileLoader loader = new ExportFileLoader();
                loader.setVisible(true);
                
                if (recordsType.getSearchType() == 0) {
                    CustomJTableModelAttendanceRecordsByClass model = (CustomJTableModelAttendanceRecordsByClass) jTable6.getModel();
                    ArrayList<ByClassJTableObject> jTableModelList = model.getList();

                    boolean result = exportClass.createTextDocumentByClass(pathAndFileName, recordsType, jComboBox1.getItemAt(jComboBox1.getSelectedIndex()).getClassTitle(), jTableModelList, commentsList);
                    
                    loader.dispose();
                }
                // By Student Search
                else if (recordsType.getSearchType() == 1) {
                    CustomJTableModelAttendanceRecordsByStudent model = (CustomJTableModelAttendanceRecordsByStudent) jTable6.getModel();
                    ArrayList<ByStudentJTableObject> jTableModelList = model.getList();

                    boolean result = exportClass.createTextDocumentByStudent(pathAndFileName, recordsType, jComboBox3.getItemAt(jComboBox3.getSelectedIndex()).getClassTitle(), jTableModelList, commentsList);
                    
                    loader.dispose();
                }
            }
        }
        else {
            StatusMessageExportAttendanceRecords smear = new StatusMessageExportAttendanceRecords(0, 0, new boolean[3]);
            
            System.out.println("No Option Selected");
            
            String formattedHTML = "<html><center>Please Select a Valid Export Option.</center></html>";
            smear.setStatusDisplayMessage(formattedHTML);
            
            smear.setFormEmblemType(1);
            
            smear.setVisible(true);
        }
        
        System.out.println("MainScreen: " + pathAndFileName);
        
        //showSaveFileDialog();
        //ExportFileConfirmation confirmationScreen = new ExportFileConfirmation();
        //confirmationScreen.setVisible(true);
        
        /*
        String exportType = "";
        
        if (jRadioButton1.isSelected() == true) {
            exportType = "Excel Spreadsheet";
        }
        else if (jRadioButton2.isSelected() == true) {
            exportType = "Word Document";
        }
        else if (jRadioButton3.isSelected() == true) {
            exportType = "PDF Document";
        }
        else if (jRadioButton4.isSelected() == true) {
            exportType = "Text File";
        }
        else {
            System.out.println("No Option Selected");
        }
        
        // By Class Search
        if (recordsType.getSearchType() == 0) {
            CustomJTableModelAttendanceRecordsByClass model = (CustomJTableModelAttendanceRecordsByClass) jTable6.getModel();
            ArrayList<ByClassJTableObject> jTableModelList = model.getList();
            
            ExportTableDataToExternalFile exportClass = new ExportTableDataToExternalFile(exportType, recordsType, jComboBox1.getItemAt(jComboBox1.getSelectedIndex()).getClassTitle(), jTableModelList, null, commentsList);
        }
        // By Student Search
        else if (recordsType.getSearchType() == 1) {
            CustomJTableModelAttendanceRecordsByStudent model = (CustomJTableModelAttendanceRecordsByStudent) jTable6.getModel();
            ArrayList<ByStudentJTableObject> jTableModelList = model.getList();
            
            ExportTableDataToExternalFile exportClass = new ExportTableDataToExternalFile(exportType, recordsType, jComboBox3.getItemAt(jComboBox3.getSelectedIndex()).getClassTitle(), null, jTableModelList, commentsList);
        }
        */
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //WindowOpen
        
        int selectedIndex = jComboBox8.getSelectedIndex();
        
        CardLayout layout = (CardLayout) jPanel5.getLayout();
        
        if (selectedIndex == 0) {
            editClassInfo.showContents(false);
            editClassInfo.showSearchBar(true);
            editClassInfo.jComboBox6.setSelectedIndex(0);
            
            createClassPanel.resetFields();
            
            layout.show(jPanel5, "Blank Panel Option");
            
            WarningMessageManagementCreateNewClass wmmcnc = new WarningMessageManagementCreateNewClass("MainScreen");
            String htmlConvertedText = "";

            htmlConvertedText = "<html><center>Please Select A Valid Option Before Attempting to Continue.</center></html>";
            wmmcnc.jLabel6.setText(htmlConvertedText);

            wmmcnc.setVisible(true);
        }
        else if (selectedIndex == 1) {
            editClassInfo.showContents(false);
            editClassInfo.showSearchBar(true);
            editClassInfo.jComboBox6.setSelectedIndex(0);
            
            layout.show(jPanel5, "Create New Class");
        }
        else if (selectedIndex == 2) {
            createClassPanel.resetFields();
            
            layout.show(jPanel5, "Edit Class Information");
        }
        else if (selectedIndex == 3) {
            editClassInfo.showContents(false);
            editClassInfo.showSearchBar(true);
            editClassInfo.jComboBox6.setSelectedIndex(0);
            
            createClassPanel.resetFields();
            
            layout.show(jPanel5, "Delete Class");
        }
        else if (selectedIndex == 4) {
            editClassInfo.showContents(false);
            editClassInfo.showSearchBar(true);
            editClassInfo.jComboBox6.setSelectedIndex(0);
            
            createClassPanel.resetFields();
            
            layout.show(jPanel5, "Link Un-Associated Classes");
        }
        else if (selectedIndex == 5) {
            editClassInfo.showContents(false);
            editClassInfo.showSearchBar(true);
            editClassInfo.jComboBox6.setSelectedIndex(0);
            
            createClassPanel.resetFields();
            
            layout.show(jPanel5, "Manage Student Access");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel60MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel60MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel60MouseClicked

    private void jLabel61MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel61MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel61MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        TaskHandler handler = new TaskHandler(1);
        handler.execute();
    }//GEN-LAST:event_jButton5ActionPerformed

    public void createMainScreenControllerThread() {
        MainScreenController newController = new MainScreenController();
        newController.execute();
    }
    
    public void setRecordsScreenAttendanceAlteringComponentsEnabled(boolean value) {
        jTextArea1.setEnabled(value);
        jTable6.setEnabled(value);
        jButton6.setEnabled(value);
    }
    
    public void showOrHideExportDataOptionBox(boolean value) {
        jLabel3.setVisible(value);
        jButton2.setVisible(value);
        jRadioButton1.setVisible(value);
        jRadioButton2.setVisible(value);
        jRadioButton3.setVisible(value);
        jRadioButton4.setVisible(value);
    }
    
    public void alterRecordsScreenComponentView(boolean value) {
        jLabel15.setVisible(value);
        jLabel20.setVisible(value);
        jLabel21.setVisible(value);
        jLabel22.setVisible(value);
        jLabel23.setVisible(value);
        jLabel58.setVisible(value);
        jComboBox7.setVisible(value);
        jScrollPane2.setVisible(value);
        jTextArea1.setVisible(value);
        jButton6.setVisible(value);
    }
    
    public void showRecordsScreenTableLoaderImage() {
        jLabel57.setVisible(true);
    }
    
    public void hideRecordsScreenTableLoaderImage() {
        jLabel57.setVisible(false);
    }
    
    public void setAttendanceRecordsLoadingImageBCVisibility(boolean value) {
        jLabel60.setVisible(value);
    }
    
    public void setAttendanceRecordsLoadingImageBSVisibility(boolean value) {
        jLabel61.setVisible(value);
    }
    
    
    public void showManagementScreenLoaderImage() {
        jLabel62.setVisible(true);
    }
    
    public void hideManagementScreenLoaderImage() {
        jLabel62.setVisible(false);
    }
    
    public void setWelcomeScreenLoaderImageVisibility(boolean value) {
        jLabel63.setVisible(value);
        jLabel64.setVisible(value);
    }
    
    public void setWelcomeScreenComponentEnablement(boolean value) {
        jLabel41.setEnabled(value);
        jLabel42.setEnabled(value);
        jLabel43.setEnabled(value);
        jLabel44.setEnabled(value);
        jLabel45.setEnabled(value);
        jLabel46.setEnabled(value);
        jLabel47.setEnabled(value);
        //jLabel48.setVisible(value);
        jLabel49.setEnabled(value);
        jButton5.setEnabled(value);
    }
    
    public void setWelcomeScreenComponentVisibility(boolean value) {
        jLabel41.setVisible(value);
        jLabel42.setVisible(value);
        jLabel43.setVisible(value);
        jLabel44.setVisible(value);
        jLabel45.setVisible(value);
        jLabel46.setVisible(value);
        jLabel47.setVisible(value);
        //jLabel48.setVisible(value);
        jLabel49.setVisible(value);
        jButton5.setVisible(value);
    }
    
    public void setWelcomeScreenBackgroundImage(int value) {
        //if (value == 0) {
            //jLabel48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/fractalBackground900x656.gif")));
        //}
    }
    
    private static int countLines(JTextArea textArea) {
        AttributedString text = new AttributedString(textArea.getText());
        FontRenderContext frc = textArea.getFontMetrics(textArea.getFont()).getFontRenderContext();
        AttributedCharacterIterator charIt = text.getIterator();
        LineBreakMeasurer lineMeasurer = new LineBreakMeasurer(charIt, frc);
        float formatWidth = (float) textArea.getSize().width;
        lineMeasurer.setPosition(charIt.getBeginIndex());

        int noLines = 0;
        while (lineMeasurer.getPosition() < charIt.getEndIndex()) {
          lineMeasurer.nextLayout(formatWidth);
          noLines++;
        }

        return noLines;
    }
    
    public void resizeColumnWidth(JTable table) {
        
        final TableColumnModel columnModel = table.getColumnModel();
        
        for (int column = 0; column < table.getColumnCount(); column++) {
            
            int width = 15; // Min width
            
            for (int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width +1 , width);
            }
            if(width > 300) {
                width = 300;
                columnModel.getColumn(column).setPreferredWidth(width);
            }
        }
    }
    
    public void resetComboBoxInformation() {
        editClassInfo.updateClassSelectionBox();
        deleteClassPanel.updateClassSelectionBox();
        updateClassSelectionBoxRecordsTabByClass();
        updateClassSelectionBoxRecordsTabByStudent();
        updateClassSelectionBoxAttendanceTab();
    }
    
    public void updateClassSelectionBoxRecordsTabByClass() {
        jComboBox1.setEnabled(false);
        
        if (jComboBox2.isEnabled()) {
            
            jComboBox2.setEnabled(false);
            
            ArrayList<String> newList = new ArrayList<>();
            DefaultComboBoxModel newModelOne = new DefaultComboBoxModel(newList.toArray());
            
            jComboBox2.setModel(newModelOne);
        }
        
        classIDs = manager.getInstructorClassListIDs(tracker.getCurrentInstructorInformation().getInstructorID());
        classes = manager.getInstructorClassList(classIDs);
        
        tracker.setClassList(classes);
        
        ArrayList<ClassType> newRecordsTabBoxList = new ArrayList<>();
        
        for (int i = 0; i < classes.size(); i++) {
            if (i == 0) {
                newRecordsTabBoxList.add(classes.get(i));
            }
            else {
                for (int j = 0; j < newRecordsTabBoxList.size(); j++) {
                    if (newRecordsTabBoxList.get(j).getClassTitle().equalsIgnoreCase(classes.get(i).getClassTitle())) {
                        
                        classes.get(i).setDuplicateStatus(true);
                        newRecordsTabBoxList.get(j).setDuplicateStatus(true);
                        
                    }
                }
                
                newRecordsTabBoxList.add(classes.get(i));
            }
        }
        
        ClassType defaultClassType = new ClassType(0, "NULL", 0, " ------------------- ", "", "", "", "Lecture", "", 0, 0);
        ClassType noClassesClassType = new ClassType(0, "NULL", 0, " -- No Associated Classes -- ", "", "", "", "Lecture", "", 0, 0);
        
        if (newRecordsTabBoxList.isEmpty()) {
            newRecordsTabBoxList.add(0, noClassesClassType);
        }
        else {
            newRecordsTabBoxList.add(0, defaultClassType);
        }
        
        //System.out.println(classNames.toString());
        DefaultComboBoxModel newModel = new DefaultComboBoxModel(newRecordsTabBoxList.toArray());
        
        jComboBox1.setModel(newModel);
        
        jComboBox1.setEnabled(true);
    }
    
    public void updateClassSelectionBoxRecordsTabByStudent() {
        jComboBox3.setEnabled(false);
        
        if (jComboBox4.isEnabled()) {
            
            jComboBox4.setEnabled(false);
            
            ArrayList<StudentRecordsTabObject> newList = new ArrayList<>();
            DefaultComboBoxModel newModelOne = new DefaultComboBoxModel(newList.toArray());
            
            jComboBox4.setModel(newModelOne);
            
        }
        if (jComboBox5.isEnabled()) {
            
            jComboBox5.setEnabled(false);
            
            ArrayList<String> newList = new ArrayList<>();
            DefaultComboBoxModel newModelTwo = new DefaultComboBoxModel(newList.toArray());
            
            jComboBox5.setModel(newModelTwo);
        }
        
        classIDs = manager.getInstructorClassListIDs(tracker.getCurrentInstructorInformation().getInstructorID());
        classes = manager.getInstructorClassList(classIDs);
        
        tracker.setClassList(classes);
        
        ArrayList<ClassType> newRecordsTabBoxList = new ArrayList<>();
        
        for (int i = 0; i < classes.size(); i++) {
            if (i == 0) {
                newRecordsTabBoxList.add(classes.get(i));
            }
            else {
                for (int j = 0; j < newRecordsTabBoxList.size(); j++) {
                    if (newRecordsTabBoxList.get(j).getClassTitle().equalsIgnoreCase(classes.get(i).getClassTitle())) {
                        
                        classes.get(i).setDuplicateStatus(true);
                        newRecordsTabBoxList.get(j).setDuplicateStatus(true);
                        
                    }
                }
                
                newRecordsTabBoxList.add(classes.get(i));
            }
        }
        
        ClassType defaultClassType = new ClassType(0, "NULL", 0, " ------------------- ", "", "", "", "Lecture", "", 0, 0);
        ClassType noClassesClassType = new ClassType(0, "NULL", 0, " -- No Associated Classes -- ", "", "", "", "Lecture", "", 0, 0);
        
        if (newRecordsTabBoxList.isEmpty()) {
            newRecordsTabBoxList.add(0, noClassesClassType);
        }
        else {
            newRecordsTabBoxList.add(0, defaultClassType);
        }
        
        DefaultComboBoxModel newModel = new DefaultComboBoxModel(newRecordsTabBoxList.toArray());

        jComboBox3.setModel(newModel);
        
        jComboBox3.setEnabled(true);
    }
    
    public void updateClassSelectionBoxAttendanceTab() {
        jComboBox6.setEnabled(false);
        
        classIDs = manager.getInstructorClassListIDs(tracker.getCurrentInstructorInformation().getInstructorID());
        classes = manager.getInstructorClassList(classIDs);
        
        tracker.setClassList(classes);
        
        ClassType defaultClassTypeAttendanceTabJComboBox = new ClassType(0, "NULL", 0, " ------------------------ ", "", "", "", "Lecture", "", 0, 0);
        ClassType noClassesTypeAttendanceTabJComboBox = new ClassType(0, "NULL", 0, " -- No Associated Classes -- ", "", "", "", "Lecture", "", 0, 0);
        
        ArrayList<ClassType> recordsTabBoxListOne = new ArrayList<>();
        
        for (int i = 0; i < classes.size(); i++) {
            if (i == 0) {
                recordsTabBoxListOne.add(classes.get(i));
            }
            else {
                for (int j = 0; j < recordsTabBoxListOne.size(); j++) {
                    if (recordsTabBoxListOne.get(j).getClassTitle().equalsIgnoreCase(classes.get(i).getClassTitle())) {
                        
                        classes.get(i).setDuplicateStatus(true);
                        recordsTabBoxListOne.get(j).setDuplicateStatus(true);
                    }
                }
                
                recordsTabBoxListOne.add(classes.get(i));
            }
        }
        
        if (recordsTabBoxListOne.isEmpty()) {
            recordsTabBoxListOne.add(0, noClassesTypeAttendanceTabJComboBox);
        }
        else {
            recordsTabBoxListOne.add(0, defaultClassTypeAttendanceTabJComboBox);
        }
        
        DefaultComboBoxModel modelBoxOne = new DefaultComboBoxModel(recordsTabBoxListOne.toArray());
        
        jComboBox6.setModel(modelBoxOne);
        jComboBox6.addPopupMenuListener(listener);
        jComboBox6.setSelectedIndex(0);
        
        jComboBox6.setEnabled(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EditProfileButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    public static javax.swing.JButton jButton7;
    public static javax.swing.JButton jButton9;
    public static javax.swing.JComboBox<ClassType> jComboBox1;
    public static javax.swing.JComboBox<String> jComboBox2;
    public static javax.swing.JComboBox<ClassType> jComboBox3;
    public static javax.swing.JComboBox<StudentRecordsTabObject> jComboBox4;
    public static javax.swing.JComboBox<String> jComboBox5;
    public static javax.swing.JComboBox<ClassType> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    public static javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    public static javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    public static javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    public static javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    public static javax.swing.JLabel jLabel50;
    public static javax.swing.JLabel jLabel51;
    public static javax.swing.JLabel jLabel52;
    public static javax.swing.JLabel jLabel53;
    public static javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    public static javax.swing.JLabel jLabel56;
    public static javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    public static javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    public static javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    public static javax.swing.JList<ChatPanel> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel51;
    public static javax.swing.JPanel jPanel52;
    public static javax.swing.JPanel jPanel53;
    public static javax.swing.JPanel jPanel54;
    private javax.swing.JPanel jPanel55;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel57;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel59;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel60;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JPanel jPanel66;
    private javax.swing.JPanel jPanel67;
    private javax.swing.JPanel jPanel68;
    private javax.swing.JPanel jPanel69;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel70;
    private javax.swing.JPanel jPanel71;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    public static javax.swing.JRadioButton jRadioButton1;
    public static javax.swing.JRadioButton jRadioButton2;
    public static javax.swing.JRadioButton jRadioButton3;
    public static javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    public static javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable6;
    public static javax.swing.JTable jTable7;
    private javax.swing.JTextArea jTextArea1;
    public static javax.swing.JTextArea jTextArea2;
    public static javax.swing.JToggleButton jToggleButton7;
    // End of variables declaration//GEN-END:variables
    public static int selectedTab = 0;
    public static boolean startServer = false;
    public String ipAddress = "";
    public static ClassType classType;
    public static int currentNumberOfStudentsOld = 0;
    public static int currentNumberOfStudentsNew = 0;
    public static boolean firstIteration = true;
    public TrackerObject tracker = new TrackerObject();
    public static ArrayList<CustomJTableRowDataObject> rowData = new ArrayList<CustomJTableRowDataObject>();
    public ArrayList<CustomJTableRowDataObjectStudentView> rowDataTwo = new ArrayList<CustomJTableRowDataObjectStudentView>();
    public static ArrayList<CustomJTableRowDataObject> list = new ArrayList<CustomJTableRowDataObject>();
    public ArrayList<StudentListReferenceObject> testList = new ArrayList<StudentListReferenceObject>();
    public static CustomJTableRowDataObject rowDataObject = new CustomJTableRowDataObject(null, null, 0, null, null);
    public static CustomJTableModel model;
    
    public static ServerInformationTracker serverTracker = new ServerInformationTracker();
    public static WindowLocationTracker windowTracker = new WindowLocationTracker();
    //private JTableUpdater jTableUpdater = new JTableUpdater();
    private MainScreenController controller = new MainScreenController();
    private LoadingImageController loadingImageController = new LoadingImageController();
    public DefaultListModel<ChatPanel> listModel = new DefaultListModel<>();
    public int i = 0;
    
    public ArrayList<Integer> classIDs = new ArrayList<>();
    public ArrayList<ClassType> classes = new ArrayList<>();
    public ArrayList<String> classNames = new ArrayList<>();
    public ArrayList<String> classDatesList = new ArrayList<>();
    public ArrayList<String> classStudentsList = new ArrayList<>();
    public ArrayList<StudentRecordsTabObject> studentIDAndNameList = new ArrayList<>();
    public ArrayList<String> commentsList = new ArrayList<>();
    public ArrayList<ClassType> unlinkedClassList = new ArrayList<>();
    
    public int jComboBox1SelectedClassID = 0;
    public int jComboBox3SelectedClassID = 0;
    public int jComboBox4SelectedStudentID = 0;
    public String jComboBox2SelectedDate = "";
    public String jComboBox4SelectedStudentName = "";
    public String jComboBox5SelectedDate = "";
    
    public RecordsSearchObject recordsType = new RecordsSearchObject(0, 0, "", "");
    public ExportTableDataToExternalFile exportClass = new ExportTableDataToExternalFile();
    public BoundsPopupMenuListener listener = new BoundsPopupMenuListener(true, false);
    
    public DatabaseManagerMySQL manager = new DatabaseManagerMySQL();

    public DefaultTableModel defaultModel = new DefaultTableModel();
    public boolean defaultTableModelInUse = false;
    
    public int recordsJTableCurrentIndexRowSelected = 0;
    public boolean showRecordsScreenGIFImage = false;
    
    public ClassInstanceInformationTracker classInstanceTracker = new ClassInstanceInformationTracker();
    
    // Custom JPanel Object To be Used in JPanel5's CardLayout
    public BlankJPanelManagementScreen blankPanel = new BlankJPanelManagementScreen();
    public CreateNewClassJPanel createClassPanel = new CreateNewClassJPanel();
    public EditClassInformation editClassInfo = new EditClassInformation();
    public DeleteClassPanel deleteClassPanel = new DeleteClassPanel();
    public LinkClassesPanel linkPanel = new LinkClassesPanel();
    public ManageStudentsPanel studentsPanel = new ManageStudentsPanel();
    
    /*
     *  LoadingScreenController is a SwingWorker Class whose
     *  doInBackground() Method is invoked upon calling the execute()
     *  method in the main class. A SwingWorker Class is the only
     *  way to safely create a seperate thread that interacts with
     *  the main EventQueue class. Should you try to invoke change to the GUI
     *  object from a non EventQueue related class, it can cause
     *  unforseen nonrepeatable errors in the programs execution.
     *
     */
    public class MessageSynchronizationController extends SwingWorker<Void,Void> {
        // Method for Seperate EventQueue Thread
        // to Execute.
        @Override
        protected Void doInBackground() throws Exception {
            
            DefaultListModel listModel = new DefaultListModel();
            jList1.setModel(listModel);
            
            String[] listData = {};
            ArrayList<String> listOfMessages = new ArrayList<>();
            
            while (serverTracker.getServerRunningStatus() == true) {
                
                if (serverTracker.getMessagesList().size() > 0) {
                    
                    try {
                        
                        System.out.println("Getting Here MessageSynchronizationController 2");

                        ChatPanel panel = serverTracker.modifyMessagesList(1, new ChatPanel(null, "", "", ""));
                        System.out.println("This is the Message from the ChatPanel object: " + panel.getMessage());

                        //String[] arrayS = message.split("\\s+");
                        
                        //String htmlFormat = "<html><br>" + arrayS[0] + "\t" + arrayS[1] + " " + arrayS[2] + "</br><br></br><br>";
                        //System.out.println(htmlFormat);
                        
                        //listOfMessages.add(htmlFormat);

                        listModel.addElement(panel);
                        
                        //DetermineTextAreaSize dtas = new DetermineTextAreaSize();
                        //dtas.jTextArea1.setText(panel.getMessage());
                        
                        //int lineCount = countLines(dtas.jTextArea1);
                        //System.out.println("Line Count of JTextArea: " + lineCount);
                        
                        //int lineCount = dtas.jTextArea1.getLineCount();
                        //System.out.println(lineCount);
                        
                        //serverTracker.setChatTextAreaSize(list1.size());
                        
                        //ChatPanelRenderer renderer = new ChatPanelRenderer();
                        
                        
                        //Dimension dimension = renderer.getPreferredSize();

                        //renderer.setSize(new Dimension((int) dimension.getWidth(), 114));
                        //renderer.setPreferredSize(new Dimension((int) dimension.getWidth(), 114));
                        //renderer.setMaximumSize(new Dimension((int) dimension.getWidth(), 114));
                        //renderer.setMinimumSize(new Dimension((int) dimension.getWidth(), 114));
                        
                        //jList1.setModel(listModel);
                        jList1.setCellRenderer(new ChatPanelRenderer());
                        listData = listOfMessages.toArray(new String[0]);

                        //jList1.setListData(listData);
                        
                        //listModel.addElement(message);
                        
                        //listModel.addElement(message);
                        //System.out.println(listModel.get(0));

                        //jList1.setModel(listModel);

                        //jList1.repaint();

                        //System.out.println("Getting Here MessageSynchronizationController 2");
                    }
                    catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
            
            System.out.println("Getting Here MessageSynchronizationController 3");
            
            listModel.clear();
            
            return null;
        }
        
        // This method is automatically invoked after the
        // doInBackground() method has finished
        // executing.
        @Override
        protected void done() {
            // Make the GuiFour Frame
            // invisible.
            //setVisible(false);
            //dispose();
        }
    }
    
    /*
     *  LoadingScreenController is a SwingWorker Class whose
     *  doInBackground() Method is invoked upon calling the execute()
     *  method in the main class. A SwingWorker Class is the only
     *  way to safely create a seperate thread that interacts with
     *  the main EventQueue class. Should you try to invoke change to the GUI
     *  object from a non EventQueue related class, it can cause
     *  unforseen nonrepeatable errors in the programs execution.
     *
     */
    public class MainScreenController extends SwingWorker<Void,Void> {
        // Method for Seperate EventQueue Thread
        // to Execute.
        @Override
        protected Void doInBackground() throws Exception {
            
            while (true) {
                // Signal when the Server Instance has began running.
                // Create new Background Thread Used to display Server
                // Connection Details.
                if (serverTracker.getServerRunningStatus() == true && startServer == true) {
                    
                    JTableUpdater jTableUpdater = new JTableUpdater();
                    jTableUpdater.execute();
                    
                    MessageSynchronizationController messageController = new MessageSynchronizationController();
                    messageController.execute();
                    
                    startServer = false;
                    break;
                }
                
            }
            return null;
        }
        
        // This method is automatically invoked after the
        // doInBackground() method has finished
        // executing.
        @Override
        protected void done() {
            // Make the GuiFour Frame
            // invisible.
            //setVisible(false);
            //dispose();
        }
    }
    
    /*
     *  LoadingScreenController is a SwingWorker Class whose
     *  doInBackground() Method is invoked upon calling the execute()
     *  method in the main class. A SwingWorker Class is the only
     *  way to safely create a seperate thread that interacts with
     *  the main EventQueue class. Should you try to invoke change to the GUI
     *  object from a non EventQueue related class, it can cause
     *  unforseen nonrepeatable errors in the programs execution.
     *
     */
    public class JTableUpdater extends SwingWorker<Void,Void> {
        // Method for Seperate EventQueue Thread
        // to Execute.
        // Method for Seperate EventQueue Thread
        // to Execute.
        @Override
        protected Void doInBackground() throws Exception {
            
            classType = tracker.getChoosenAttendanceClassType();

            while (serverTracker.getServerRunningStatus() == true) {
                
                testList = new ArrayList<StudentListReferenceObject>();
                
                if (serverTracker.getListAlterationStatus() == true) {
                    
                    //serverTracker.acquireLock();
                    serverTracker.setTableCreationInProgress(true);
                    
                    jTable7.repaint();
                    
                    try {
                        testList = serverTracker.getStudentListReferenceObjectList();
                        rowData = new ArrayList<CustomJTableRowDataObject>();
                        rowData = serverTracker.createRowDataObject(testList);
                        //System.out.println("TestList Size: " + testList.size());
                    }
                    catch (Exception e) {
                        System.out.println("1" + e);
                    }
                

                    model = new CustomJTableModel(rowData);

                    DefaultTableCellRenderer renderer = new DefaultTableCellRenderer(){
                        @Override
                        public Component getTableCellRendererComponent(JTable arg0,Object arg1, boolean arg2, boolean arg3, int arg4, int arg5) {
                             Component tableCellRendererComponent = super.getTableCellRendererComponent(arg0, arg1, arg2, arg3, arg4, arg5);
                             int align = DefaultTableCellRenderer.CENTER;
                             ((DefaultTableCellRenderer)tableCellRendererComponent).setHorizontalAlignment(align);
                             ((DefaultTableCellRenderer)tableCellRendererComponent).setFont(new java.awt.Font("Lucida Grande", 0, 13));
                             return tableCellRendererComponent;
                        }
                    };

                    DefaultTableCellRenderer headerRendererBlack = new DefaultTableCellRenderer(){
                        @Override
                        public Component getTableCellRendererComponent(JTable arg0,Object arg1, boolean arg2, boolean arg3, int arg4, int arg5) {
                             Component tableCellRendererComponent = super.getTableCellRendererComponent(arg0, arg1, arg2, arg3, arg4, arg5);
                             int align = DefaultTableCellRenderer.CENTER;
                             ((DefaultTableCellRenderer)tableCellRendererComponent).setHorizontalAlignment(align);
                             ((DefaultTableCellRenderer)tableCellRendererComponent).setBackground(new java.awt.Color(0, 0, 0));
                             ((DefaultTableCellRenderer)tableCellRendererComponent).setForeground(new java.awt.Color(255, 255, 255));
                             return tableCellRendererComponent;
                        }
                    };

                    DefaultTableCellRenderer headerRendererBlue = new DefaultTableCellRenderer(){
                        @Override
                        public Component getTableCellRendererComponent(JTable arg0,Object arg1, boolean arg2, boolean arg3, int arg4, int arg5) {
                             Component tableCellRendererComponent = super.getTableCellRendererComponent(arg0, arg1, arg2, arg3, arg4, arg5);
                             int align = DefaultTableCellRenderer.CENTER;
                             ((DefaultTableCellRenderer)tableCellRendererComponent).setHorizontalAlignment(align);
                             ((DefaultTableCellRenderer)tableCellRendererComponent).setBackground(new java.awt.Color(0, 0, 255));
                             ((DefaultTableCellRenderer)tableCellRendererComponent).setForeground(new java.awt.Color(255, 255, 255));
                             return tableCellRendererComponent;
                        }
                    };

                    rowDataTwo = new ArrayList<CustomJTableRowDataObjectStudentView>();

                    for (int i = 0; i < rowData.size(); i++) {
                        if (i == 0) {
                            CustomJTableRowDataObjectStudentView entry = new CustomJTableRowDataObjectStudentView(new javax.swing.ImageIcon(getClass().getResource(tracker.getCurrentInstructorInformation().getInstructorProfileImageSmall())), tracker.getCurrentInstructorInformation().getInstructorDisplayName(), "Instructor", tracker.getCurrentInstructorInformation().getInstructorEmail());
                            rowDataTwo.add(entry);

                            entry = new CustomJTableRowDataObjectStudentView(rowData.get(i).getImageIconValue(), rowData.get(i).getUsername(), "Student", rowData.get(i).getEmailAddress());
                            rowDataTwo.add(entry);
                        }
                        else {
                            CustomJTableRowDataObjectStudentView entry = new CustomJTableRowDataObjectStudentView(rowData.get(i).getImageIconValue(), rowData.get(i).getUsername(), "Student", rowData.get(i).getEmailAddress());
                            rowDataTwo.add(entry);
                        }
                    }

                    serverTracker.setCustomJTableRowDataObjectList(rowDataTwo);
                    serverTracker.setSendJTableListStatus(true);

                    jTable7.setModel(new CustomJTableModel(rowData));

                    jTable7.repaint();

                    jTable7.getColumnModel().getColumn(0).setPreferredWidth(15);

                    jTable7.getColumnModel().getColumn(0).setResizable(false);
                    jTable7.getColumnModel().getColumn(1).setResizable(false);
                    jTable7.getColumnModel().getColumn(2).setResizable(false);
                    jTable7.getColumnModel().getColumn(3).setResizable(false);
                    jTable7.getColumnModel().getColumn(4).setResizable(false);

                    jTable7.getColumnModel().getColumn(1).setCellRenderer(renderer);
                    jTable7.getColumnModel().getColumn(2).setCellRenderer(renderer);
                    jTable7.getColumnModel().getColumn(3).setCellRenderer(renderer);
                    jTable7.getColumnModel().getColumn(4).setCellRenderer(renderer);
                    jTable7.getColumnModel().getColumn(0).setHeaderRenderer(headerRendererBlue);
                    jTable7.getColumnModel().getColumn(1).setHeaderRenderer(headerRendererBlack);
                    jTable7.getColumnModel().getColumn(2).setHeaderRenderer(headerRendererBlue);
                    jTable7.getColumnModel().getColumn(3).setHeaderRenderer(headerRendererBlack);
                    jTable7.getColumnModel().getColumn(4).setHeaderRenderer(headerRendererBlue);

                    jTable7.validate();
                    jTable7.repaint();

                    serverTracker.setListAlterationStatus(false);
                    serverTracker.decrementListAlterationCounter();

                    //System.out.println("MainScreen Boolean Checker: " + serverTracker.getStudentListReferenceObjectList().equals(testList));
                    
                    // If the current synchronized list is not equal to the previously copied
                    // testList, make the Mainscreen Repeat the table population segment of the Loop.
                    if (serverTracker.getStudentListReferenceObjectList().equals(testList)) {
                        // Stop Loop if two Lists Are Equal.
                        serverTracker.setListAlterationStatus(false);
                    }
                    
                    //ArrayList<StudentListReferenceObject> clientList = serverTracker.getCurrentServerInstance().getClientList();
                    
                    serverTracker.setTableCreationInProgress(false);
                    
                    //System.out.println("X978" +clientList.size());
                    
                    /*for (int i = 0; i <= clientList.size(); i++) {
                        System.out.println("X979");
                        Server.ServerThread serverThread = clientList.get(i).getServerThreadObject();
                        serverThread.getSendTableInformationThreadInstance().setSendInformationStatus(true);
                    }*/
                }
                
                if (serverTracker.getServerRunningStatus() == true) {
                    
                    if (firstIteration == true) {
                        jLabel50.setText("Participants: 0/" + classType.getClassParticipants());
                        jLabel50.setVisible(true);
                        firstIteration = false;
                    }
                    else {
                        //System.out.println("Controller: Getting Here 2");
                        currentNumberOfStudentsNew = jTable7.getRowCount();

                        if (currentNumberOfStudentsNew != currentNumberOfStudentsOld) {
                            System.out.println("Controller: Getting Here 2");
                            jLabel50.setText("Participants: " + currentNumberOfStudentsNew + "/" + classType.getClassParticipants());
                            currentNumberOfStudentsOld = currentNumberOfStudentsNew;
                        }
                    }
                }
            }
            
            System.out.println("We Have Reached the End of JTableUpdater Thread 3139");
            return null;
        }
        
        // This method is automatically invoked after the
        // doInBackground() method has finished
        // executing.
        @Override
        protected void done() {
            // Make the GuiFour Frame
            // invisible.
            //setVisible(false);
            //dispose();
        }
    }
    
    /*
     *  LoadingScreenController is a SwingWorker Class whose
     *  doInBackground() Method is invoked upon calling the execute()
     *  method in the main class. A SwingWorker Class is the only
     *  way to safely create a seperate thread that interacts with
     *  the main EventQueue class. Should you try to invoke change to the GUI
     *  object from a non EventQueue related class, it can cause
     *  unforseen nonrepeatable errors in the programs execution.
     *
     */
    public class LoadingImageController extends SwingWorker<Void,Void> {
        // Method for Seperate EventQueue Thread
        // to Execute.
        @Override
        protected Void doInBackground() throws Exception {
            
            boolean recordScreenLabelInvisible = true;
            System.out.println("LoadingScreenController Getting Here. 1");
            
            while (tracker.getApplicationClosingStatus() == false) {
                
                if (showRecordsScreenGIFImage == true) {
                    System.out.println("LoadingScreenController Getting Here. 2");
                    jLabel57.setVisible(true);
                }
                else {
                    jLabel57.setVisible(false);
                }
                /*
                System.out.println("tracker boolean status: " + tracker.getShowRecordsLoadingGIFStatus());
                
                if (tracker.getShowRecordsLoadingGIFStatus() == true) {
                    System.out.println("LoadingScreenController Getting Here. 2");
                    jLabel57.setVisible(true);
                    recordScreenLabelInvisible = false;
                }
                else if (tracker.getShowRecordsLoadingGIFStatus() == false && recordScreenLabelInvisible == true) {
                    jLabel57.setVisible(false);
                    recordScreenLabelInvisible = false;
                }*/
            }
            
            System.out.println("LoadingScreenController Getting Here. 3");
            
            return null;
        }
        
        // This method is automatically invoked after the
        // doInBackground() method has finished
        // executing.
        @Override
        protected void done() {
            // Make the GuiFour Frame
            // invisible.
            //setVisible(false);
            //dispose();
        }
    }
    
     /*
     *  LoadingScreenController is a SwingWorker Class whose
     *  doInBackground() Method is invoked upon calling the execute()
     *  method in the main class. A SwingWorker Class is the only
     *  way to safely create a seperate thread that interacts with
     *  the main EventQueue class. Should you try to invoke change to the GUI
     *  object from a non EventQueue related class, it can cause
     *  unforseen nonrepeatable errors in the programs execution.
     *
     */
    public class TaskHandler extends SwingWorker<Void,Void> {
        
        public int task;

        public TaskHandler(int value) {
            task = value;
        }
        
        // Method for Seperate EventQueue Thread
        // to Execute.
        @Override
        protected Void doInBackground() throws Exception {
            
            try {
            
            // Form Window Opened
            if (task == 0) {
                
                jTabbedPane1.setBackground(new java.awt.Color(0, 0, 0));
                jTabbedPane1.setForeground(new java.awt.Color(0, 0, 0));
                // Temporary Until Database is Fixed:
                // ****************************************************************
                /*TrackerObject tracker = new TrackerObject();
                tracker.setCurrentDesignation("Student");
                ImageIcon imageLarge = new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/ProfilePictures/Large/ProfilePicture20.png"));
                ImageIcon imageMedium = new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/ProfilePictures/Scaled/ProfilePicture20Scaled.png"));
                ImageIcon imageSmall = new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/ProfilePictures/Scaled/ProfilePicture20Scaled.png"));

                Student stud = new Student(2552496, "Tyler", "Fontana", "fontana.tyler@gmail.com", "tmfontan", "DesertStorm7692", "Tyler Fontana", "(225)-202-3570", "4741 Fairfield Street", "Default", imageLarge, imageMedium, imageSmall);
                tracker.setCurrentStudentInformation(stud);
                 ****************************************************************/
                //DefaultTableModel model = (DefaultTableModel) jTable7.getModel();
                //serverTracker.setTableModelInstance(model);

                jLabel60.setVisible(false);
                jLabel61.setVisible(false);

                classIDs = manager.getInstructorClassListIDs(tracker.getCurrentInstructorInformation().getInstructorID());
                classes = manager.getInstructorClassList(classIDs);

                tracker.setClassList(classes);


                /**
                 * In this next section, we will create custom ClassTypes which
                 * will later be used in the creation of our DefaultJComboBox Models.
                 * This is done in order to add to the cosmetic side of the Application.
                 * Each of these Custom ClassTypes Will contain default title lengths
                 * that are meant to fill the width of the JComboBox containing them.
                 * For Each JComboBox, we will create both a Default and No Classes
                 * ClassType. The Default ClassType will be displayed as the first JComboBox
                 * List Entry should the Instructor Already Have Classes linked to his or
                 * her account. The No Classes ClassType will be used should the Instructor
                 * not yet have any Classes Associated with his or her Account. Should an
                 * Instructor wish to change this, they can Create a New Class within the
                 * Management Tab. Additionally, they can can immediately link that same class
                 * to their account.
                 */

                // Create Default ClassType Entry for JComboBox in Attendance Tab
                ClassType defaultClassTypeAttendanceTabJComboBox = new ClassType(0, "NULL", 0, " ---------------------- ", "", "", "", "Lecture", "", 0, 0);
                // Create ClassType Entry for JComboBox in Attendance Tab in case the
                // current Instructor Doesn't Have Any Associated Classes.
                ClassType noClassesTypeAttendanceTabJComboBox = new ClassType(0, "NULL", 0, " --- No Associated Classes --- ", "", "", "", "Lecture", "", 0, 0);

                // Create Default ClassType Entry for the "By Class" and "By Student" 
                // JComboBoxes in Records Tab
                ClassType defaultClassTypeRecordsScreen = new ClassType(0, "NULL", 0, " --------------- ", "", "", "", "Lecture", "", 0, 0);
                // Create ClassType Entry for the "By Class" and "By Student" 
                // JComboBoxes in Records Tab in case the current Instructor 
                // Doesn't Have Any Associated Classes.
                ClassType noClassesTypeRecordsScreen = new ClassType(0, "NULL", 0, " --- No Associated Classes --- ", "", "", "", "Lecture", "", 0, 0);

                // Create Default ClassType Entry for the JComboBox located 
                // in the "Update Class Information" JPanel located under the Management Tab.
                ClassType defaultClassTypeUpdateClassInformationJPanel = new ClassType(0, "NULL", 0, "--------------------------------------------------------------- ", "", "", "", "Lecture", "", 0, 0);
                // Create ClassType Entry for the JComboBox in the "Update Class Information" JPanel 
                // located under the Management Tab. This is done in case the current Instructor 
                // Doesn't Have Any Associated Classes.
                ClassType noClassesClassTypeUpdateClassInformationJPanel = new ClassType(0, "NULL", 0, "-------------------- No Associated Classes ------------------------ ", "", "", "", "Lecture", "", 0, 0);

                // Create Default ClassType Entry for the JComboBox located 
                // in the "Delete Class" JPanel located under the Management Tab. 
                ClassType defaultClassTypeJPanelDeleteClass = new ClassType(0, "NULL", 0, "----------------------------------- ", "", "", "", "Lecture", "", 0, 0);
                // Create ClassType Entry for the JComboBox in the "Delete Class" JPanel 
                // located under the Management Tab. This is done in case the current Instructor 
                // Doesn't Have Any Associated Classes.
                ClassType noClassesClassTypeDeleteClass = new ClassType(0, "NULL", 0, "------ No Associated Classes ------ ", "", "", "", "Lecture", "", 0, 0);

                // Create Default ClassType Entry for the JComboBox located 
                // in the "Student Management" JPanel located under the Management Tab.
                ClassType defaultClassTypeJPanelManageStudentAccess = new ClassType(0, "NULL", 0, "---------------------------------------- ", "", "", "", "Lecture", "", 0, 0);
                // Create ClassType Entry for the JComboBox in the "Update Class Information" JPanel 
                // located under the Management Tab. This is done in case the current Instructor 
                // Doesn't Have Any Associated Classes.
                ClassType noClassesClassTypeManageStudentAccess = new ClassType(0, "NULL", 0, "--------- No Associated Classes -------- ", "", "", "", "Lecture", "", 0, 0);

                /**
                 *  Seeing as the JComboBox's Contained within the Application are Directly
                 *  Linked to the ArrayLists they were created from, we must also create a
                 *  separate ArrayList for each of the Components along with their Custom
                 *  DefaultJComboBoxModels.
                 */

                // Create ClassType ArrayList Which will be responsible for holding
                // all the Available Instructor Associated Classes which will be integrated
                // into the "By Class" JComboBox located in the Records Tab.
                ArrayList<ClassType> recordsTabBoxListOne = new ArrayList<>();
                // Create ClassType ArrayList Which will be responsible for holding
                // all the Available Instructor Associated Classes which will be integrated
                // into the "By Student" JComboBox located in the Records Tab.
                ArrayList<ClassType> recordsTabBoxListTwo = new ArrayList<>();
                // Create ClassType ArrayList Which will be responsible for holding
                // all the Available Instructor Associated Classes which will be integrated
                // into the Class Selection JComboBox located in the "Update Class Information"
                // JPanel Under the Management Tab.
                ArrayList<ClassType> recordsTabBoxListThree = new ArrayList<>();
                // Create ClassType ArrayList Which will be responsible for holding
                // all the Available Instructor Associated Classes which will be integrated
                // into the Class Selection JComboBox located in the "Update Class Information"
                // JPanel Under the Management Tab.
                ArrayList<ClassType> recordsTabBoxListFour = new ArrayList<>();
                // Create ClassType ArrayList Which will be responsible for holding
                // all the Available Instructor Associated Classes which will be integrated
                // into the Class Selection JComboBox located in the "Delete Class"
                // JPanel Under the Management Tab.
                ArrayList<ClassType> recordsTabBoxListFive = new ArrayList<>();
                // Create ClassType ArrayList Which will be responsible for holding
                // all the Available Instructor Associated Classes which will be integrated
                // into the Class Selection JComboBox located in the "Manage Student Access"
                // JPanel Under the Management Tab.
                ArrayList<ClassType> recordsTabBoxListSix = new ArrayList<>();

                for (int i = 0; i < classes.size(); i++) {

                    if (i == 0) {
                        recordsTabBoxListOne.add(classes.get(i));
                        recordsTabBoxListTwo.add(classes.get(i));
                        recordsTabBoxListThree.add(classes.get(i));
                        recordsTabBoxListFour.add(classes.get(i));
                        recordsTabBoxListFive.add(classes.get(i));
                        recordsTabBoxListSix.add(classes.get(i));
                    }
                    else {
                        for (int j = 0; j < recordsTabBoxListOne.size(); j++) {

                            if (recordsTabBoxListOne.get(j).getClassTitle().equalsIgnoreCase(classes.get(i).getClassTitle())) {

                                classes.get(i).setDuplicateStatus(true);
                                recordsTabBoxListOne.get(j).setDuplicateStatus(true);
                                recordsTabBoxListTwo.get(j).setDuplicateStatus(true);
                                recordsTabBoxListThree.get(j).setDuplicateStatus(true);
                                recordsTabBoxListFour.get(j).setDuplicateStatus(true);
                                recordsTabBoxListFive.get(j).setDuplicateStatus(true);
                                recordsTabBoxListSix.get(j).setDuplicateStatus(true);
                            }
                        }

                        recordsTabBoxListOne.add(classes.get(i));
                        recordsTabBoxListTwo.add(classes.get(i));
                        recordsTabBoxListThree.add(classes.get(i));
                        recordsTabBoxListFour.add(classes.get(i));
                        recordsTabBoxListFive.add(classes.get(i));
                        recordsTabBoxListSix.add(classes.get(i));
                    }
                }

                /*************************************************************************************/
                /*************************************************************************************/

                // Create JComboBox Model For the By Class Attendance Record
                // Search int the Records Tab.
                if (recordsTabBoxListOne.isEmpty()) {
                    // Add Unique JComboBox "No Class" ClassType to List.
                    recordsTabBoxListOne.add(0, noClassesTypeRecordsScreen);
                }
                else {
                    // Should the list not be empty, set the Default ClassType at the 
                    // front of the List.
                    recordsTabBoxListOne.add(0, defaultClassTypeRecordsScreen);
                }

                /*************************************************************************************/
                /*************************************************************************************/

                // Create JComboBox Model For the By Student Attendance Record
                // Search int the Records Tab.
                if (recordsTabBoxListTwo.isEmpty()) {
                    // Add Unique JComboBox "No Class" ClassType to List.
                    recordsTabBoxListTwo.add(0, noClassesTypeRecordsScreen);
                }
                else {
                    // Should the list not be empty, set the Default ClassType at the 
                    // front of the List.
                    recordsTabBoxListTwo.add(0, defaultClassTypeRecordsScreen);
                }

                /*************************************************************************************/
                /*************************************************************************************/

                // Check to see if the Management Tab "Update Class Information" JComboBox ArrayList is Empty.
                // Should this be true, add the unique "No Classes" ClassType into the List
                // before its converted into a JComboBoxModel.
                if (recordsTabBoxListThree.isEmpty()) {
                    // Add Unique JComboBox "No Class" ClassType to List.
                    recordsTabBoxListThree.add(0, noClassesClassTypeUpdateClassInformationJPanel);
                }
                else {
                    // Should the list not be empty, set the Default ClassType at the 
                    // front of the List.
                    recordsTabBoxListThree.add(0, defaultClassTypeUpdateClassInformationJPanel);
                }

                /*************************************************************************************/
                /*************************************************************************************/

                // Check to see if the Attendance Tab JComboBox ArrayList is Empty.
                // Should this be true, add the "No Classes" ClassType into the List
                // before its converted into a JComboBoxModel.
                if (recordsTabBoxListFour.isEmpty()) {
                    // Add Unique JComboBox "No Class" ClassType to List.
                    recordsTabBoxListFour.add(0, noClassesTypeAttendanceTabJComboBox);
                }
                else {
                    // Should the list not be empty, set the Default ClassType at the 
                    // front of the List.
                    recordsTabBoxListFour.add(0, defaultClassTypeAttendanceTabJComboBox);
                }

                /*************************************************************************************/
                /*************************************************************************************/

                // Check to see if the Management Tab "Delete Class" JComboBox ArrayList is Empty.
                // Should this be true, add the unique "No Classes" ClassType into the List
                // before its converted into a JComboBoxModel.
                if (recordsTabBoxListFive.isEmpty()) {
                    // Add Unique JComboBox "No Class" ClassType to List.
                    recordsTabBoxListFive.add(0, noClassesClassTypeDeleteClass);
                }
                else {
                    // Should the list not be empty, set the Default ClassType at the 
                    // front of the List.
                    recordsTabBoxListFive.add(0, defaultClassTypeJPanelDeleteClass);
                }

                /*************************************************************************************/
                /*************************************************************************************/

                // Check to see if the Management Tab "Manage Student Access" JComboBox ArrayList is Empty.
                // Should this be true, add the unique "No Classes" ClassType into the List
                // before its converted into a JComboBoxModel.
                if (recordsTabBoxListSix.isEmpty()) {
                    // Add Unique JComboBox "No Class" ClassType to List.
                    recordsTabBoxListSix.add(0, noClassesClassTypeManageStudentAccess);
                }
                else {
                    // Should the list not be empty, set the Default ClassType at the 
                    // front of the List.
                    recordsTabBoxListSix.add(0, defaultClassTypeJPanelManageStudentAccess);
                }

                /*************************************************************************************/
                /*************************************************************************************/

                DefaultComboBoxModel modelBoxOne = new DefaultComboBoxModel(recordsTabBoxListOne.toArray());
                DefaultComboBoxModel modelBoxTwo = new DefaultComboBoxModel(recordsTabBoxListTwo.toArray());
                DefaultComboBoxModel modelBoxThree = new DefaultComboBoxModel(recordsTabBoxListThree.toArray());
                DefaultComboBoxModel modelBoxFour = new DefaultComboBoxModel(recordsTabBoxListFour.toArray());
                DefaultComboBoxModel modelBoxFive = new DefaultComboBoxModel(recordsTabBoxListFive.toArray());
                DefaultComboBoxModel modelBoxSix = new DefaultComboBoxModel(recordsTabBoxListSix.toArray());

                jComboBox6.setModel(modelBoxFour);
                jComboBox6.addPopupMenuListener(listener);
                jComboBox6.setSelectedIndex(0);

                jComboBox1.setModel(modelBoxOne);
                jComboBox1.addPopupMenuListener(listener);
                jComboBox1.setSelectedIndex(0);

                jComboBox3.setModel(modelBoxTwo);
                jComboBox3.addPopupMenuListener(listener);
                jComboBox3.setSelectedIndex(0);

                jTable6.setModel(defaultModel);
                defaultTableModelInUse = true;

                jButton7.setVisible(false);
                jToggleButton7.setVisible(false);

                // Make JTextArea Background Invisible.
                //jScrollPane3.getViewport().setBackground(new Color(0,0,0,0));
                //jScrollPane8.getViewport().setBackground(new Color(0,0,0,0));
                //jScrollPane3.setBackground(new Color(0,0,0,0));
                //jScrollPane8.setBackground(new Color(0,0,0,0));
                //jTextArea2.setBackground(new Color(0,0,0,0));
                //jTextArea3.setBackground(new Color(0,0,0,0));
                //jLabel45.setVisible(false);
                jLabel50.setVisible(false);

                selectedTab = jTabbedPane1.getSelectedIndex();

                Instructor instructor = tracker.getCurrentInstructorInformation();

                CreateImageFromText cift = new CreateImageFromText();

                int sizeOne = cift.determineFontSizeAmericanCaptain(instructor.getInstructorDisplayName(), 495, 100, 100);
                int sizeTwo = cift.determineFontSizeLucidaGrande(instructor.getInstructorEmail(), 255, 25, 20);
                String htmlText = "<html><left>" + instructor.getInstructorAddress() + "</left></html>";

                jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource(instructor.getInstructorProfileImageLarge())));

                jLabel30.setText(instructor.getInstructorDisplayName());
                jLabel30.setFont(new java.awt.Font("American Captain", 0, sizeOne));

                jLabel34.setText(instructor.getInstructorEmail());
                jLabel34.setFont(new java.awt.Font("Lucida Grande", 1, sizeTwo));

                jLabel36.setText(instructor.getInstructorPhone());
                jLabel38.setText(htmlText);

                jScrollPane1.getViewport().setBackground(new Color(0,0,0,0));
                jScrollPane1.setBackground(new Color(0,0,0,0));
                jTextArea2.setBackground(new Color(0,0,0,0));
                jTextArea2.setText(instructor.getInstructorBiography());

                /*
                linkPanel.jTable1.getColumnModel().getColumn(0).setResizable(false);
                linkPanel.jTable1.getColumnModel().getColumn(1).setResizable(false);
                linkPanel.jTable1.getColumnModel().getColumn(2).setResizable(false);
                linkPanel.jTable1.getColumnModel().getColumn(3).setResizable(false);
                linkPanel.jTable1.getColumnModel().getColumn(4).setResizable(false);
                linkPanel.jTable1.getColumnModel().getColumn(5).setResizable(false);
                linkPanel.jTable1.getColumnModel().getColumn(6).setResizable(false);
                */

                //jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource(instructor.getInstructorProfileImageLarge())));
                //jLabel34.setText(instructor.getInstructorDisplayName());
                //jLabel49.setVisible(true);
                //jLabel35.setVisible(false);

                //jLabel43.setText("" + instructor.getInstructorFirstName() + " " + instructor.getInstructorLastName());
                //jLabel41.setVisible(false);
                //jLabel39.setVisible(false);

                //if (instructor.getInstructorEmail().equalsIgnoreCase("Default") || instructor.getInstructorEmail().equalsIgnoreCase("")) {
                    //jLabel32.setVisible(false);
                    //jLabel37.setVisible(false);
                //}
                //else {
                    //jLabel37.setText(instructor.getInstructorEmail());
                    //jLabel32.setVisible(true);
                    //jLabel37.setVisible(true);
                //}

                //if (instructor.getInstructorPhone().equalsIgnoreCase("Default") || instructor.getInstructorPhone().equalsIgnoreCase("")) {
                    //jLabel33.setVisible(false);
                    //jLabel38.setVisible(false);
                //}
                //else {
                    //jLabel38.setText(instructor.getInstructorPhone());
                    //jLabel33.setVisible(true);
                    //jLabel38.setVisible(true);
                //}

                /*
                if (instructor.getInstructorAddress().equalsIgnoreCase("Default") || instructor.getInstructorAddress().equalsIgnoreCase("")) {
                    //jLabel36.setVisible(false);
                    //jScrollPane3.setVisible(false);
                    //jTextArea2.setVisible(false);
                }
                else {
                    //jTextArea2.setText(instructor.getInstructorAddress());
                    //jLabel36.setVisible(true);
                    //jScrollPane3.setVisible(true);
                    //jTextArea2.setVisible(true);
                }

                if (instructor.getInstructorBiography().equalsIgnoreCase("Default") || instructor.getInstructorBiography().equalsIgnoreCase("")) {
                    //jLabel44.setVisible(false);
                    //jScrollPane8.setVisible(false);
                    //jTextArea3.setVisible(false);
                }
                else {
                    //jTextArea3.setText(instructor.getInstructorBiography());
                    //jLabel44.setVisible(true);
                    //jScrollPane8.setVisible(true);
                    //jTextArea3.setVisible(true);
                }


                */

                linkPanel.setTableComponentsVisible(false);
                linkPanel.setSearchComponentsVisible(true);
                linkPanel.resetSearchFields();

                FindNetworkInterfaces findInterfaces = new FindNetworkInterfaces();
                ipAddress = findInterfaces.determineIPAddress();

                // Hide Loading Image on Management Screen
                hideManagementScreenLoaderImage();
                
                editClassInfo.jComboBox6.setModel(modelBoxThree);
                editClassInfo.jComboBox6.addPopupMenuListener(listener);
                editClassInfo.jComboBox6.setSelectedIndex(0);

                deleteClassPanel.jComboBox1.setModel(modelBoxFive);
                deleteClassPanel.jComboBox1.addPopupMenuListener(listener);
                deleteClassPanel.jComboBox1.setSelectedIndex(0);

                studentsPanel.jComboBox1.setModel(modelBoxSix);
                studentsPanel.jComboBox1.addPopupMenuListener(listener);
                studentsPanel.jComboBox1.setSelectedIndex(0);
                studentsPanel.setTableTypeSelectionComponentsVisible(false);
                studentsPanel.setClassStudentListComponentsVisible(false);
                studentsPanel.setAllStudentsListComponentsVisible(false);
                studentsPanel.setRemoveStudentFromClassButtonVisible(false);
                studentsPanel.setAllStudentsTableReturnButtonVisible(false);
                studentsPanel.setAddStudentToClassAllStudentsButtonVisible(false);

                // Add Card Panels to the JPanel Layout.
                jPanel5.add("Blank Panel Option", blankPanel);
                jPanel5.add("Create New Class", createClassPanel);
                jPanel5.add("Edit Class Information", editClassInfo);
                jPanel5.add("Delete Class", deleteClassPanel);
                jPanel5.add("Link Un-Associated Classes", linkPanel);
                jPanel5.add("Manage Student Access", studentsPanel);

                // Start JPanel5 on the Blank Panel Layout.
                CardLayout layout = (CardLayout) jPanel5.getLayout();
                layout.show(jPanel5, "Blank Panel Option");
                
                setWelcomeScreenComponentVisibility(true);
                setWelcomeScreenLoaderImageVisibility(false);
                setWelcomeScreenBackgroundImage(0);
                
                //Marker_I
                jTabbedPane1.setEnabled(true);
            }
            /**
             *  If the Task Number is Equal to the Value of 1, then
             *  Force the SwingWorker Thread to Open the Website Link
             *  to the MyPHPAdmin Site that houses the Remote Database
             *  File. This Website is Meant to Act as the Developer's
             *  Access Screen Seeing as it Allows For the User to
             *  Make Modifications to the Database Information Outside
             *  of the Parameters of the Mothership Attendance
             *  Application.
             */
            else if (task == 1) {
                /**
                 *  Create a new URI Object Which Will Be
                 *  Used in Opening the Developer's Website.
                 */
                URI uri = new URI("https://remotemysql.com/phpmyadmin");
                /**
                 *  Open the URL Declared Above in the Default
                 *  Web Browser on the Current Machine.
                 */
                java.awt.Desktop.getDesktop().browse(uri);
            }
            // Repopulate the By Class Class List ComboBox on the Records Screen
            else if (task == 2) {
                
                // Disable the Student ComboBox in the By Student
                // Search Category
                jComboBox4.setEnabled(false);
                // Disable the Date ComboBox in the By Student
                // Search Category
                jComboBox5.setEnabled(false);

                alterRecordsScreenComponentView(false);

                // Deselect Any Export Option JRadioButtons Should
                // They have been selected in a previous Records Search.
                jRadioButton1.setSelected(false);
                // Deselect Any Export Option JRadioButtons Should
                // They have been selected in a previous Records Search.
                jRadioButton2.setSelected(false);
                // Deselect Any Export Option JRadioButtons Should
                // They have been selected in a previous Records Search.
                jRadioButton3.setSelected(false);
                // Deselect Any Export Option JRadioButtons Should
                // They have been selected in a previous Records Search.
                jRadioButton4.setSelected(false);

                if (defaultTableModelInUse == false) {
                    jTable6.setModel(defaultModel);

                    showOrHideExportDataOptionBox(false);
                    jLabel8.setVisible(false);
                }
                
                ArrayList<StudentRecordsTabObject> emptyStudentsNameList = new ArrayList<>();
                ArrayList<String> emptyDatesByStudentList = new ArrayList<>();

                DefaultComboBoxModel emptyStudentsModel = new DefaultComboBoxModel(emptyStudentsNameList.toArray());
                jComboBox4.setModel(emptyStudentsModel);
                jComboBox4.setSelectedIndex(-1);

                DefaultComboBoxModel emptyDatesByStudentModel = new DefaultComboBoxModel(emptyDatesByStudentList.toArray());
                jComboBox5.setModel(emptyDatesByStudentModel);
                jComboBox5.setSelectedIndex(-1);

                jComboBox3.setSelectedIndex(0);

                recordsType.setSearchType(0);
        
                if (jComboBox2.isEnabled()) {

                    jComboBox2.setEnabled(false);

                    ArrayList<String> newList = new ArrayList<>();
                    DefaultComboBoxModel newModelOne = new DefaultComboBoxModel(newList.toArray());

                    jComboBox2.setModel(newModelOne);
                }

                classIDs = manager.getInstructorClassListIDs(tracker.getCurrentInstructorInformation().getInstructorID());
                classes = manager.getInstructorClassList(classIDs);

                tracker.setClassList(classes);

                ArrayList<ClassType> newRecordsTabBoxList = new ArrayList<>();

                for (int i = 0; i < classes.size(); i++) {
                    if (i == 0) {
                        newRecordsTabBoxList.add(classes.get(i));
                    }
                    else {
                        for (int j = 0; j < newRecordsTabBoxList.size(); j++) {
                            if (newRecordsTabBoxList.get(j).getClassTitle().equalsIgnoreCase(classes.get(i).getClassTitle())) {

                                classes.get(i).setDuplicateStatus(true);
                                newRecordsTabBoxList.get(j).setDuplicateStatus(true);

                            }
                        }

                        newRecordsTabBoxList.add(classes.get(i));
                    }
                }

                // Create Default ClassType Entry for the "By Class" and "By Student" 
                // JComboBoxes in Records Tab
                ClassType defaultClassType = new ClassType(0, "NULL", 0, " --------------- ", "", "", "", "Lecture", "", 0, 0);
                // Create ClassType Entry for the "By Class" and "By Student" 
                // JComboBoxes in Records Tab in case the current Instructor 
                // Doesn't Have Any Associated Classes.
                ClassType noClassesClassType = new ClassType(0, "NULL", 0, " --- No Associated Classes --- ", "", "", "", "Lecture", "", 0, 0);

                if (newRecordsTabBoxList.isEmpty()) {
                    newRecordsTabBoxList.add(0, noClassesClassType);
                }
                else {
                    newRecordsTabBoxList.add(0, defaultClassType);
                }

                //System.out.println(classNames.toString());
                DefaultComboBoxModel newModel = new DefaultComboBoxModel(newRecordsTabBoxList.toArray());

                jComboBox1.setModel(newModel);
                
                jLabel60.setVisible(false);
                jComboBox1.setEnabled(true);
            }
            // Repopulate By Student Class List ComboBox in Records Tab
            else if (task == 3) {

                jComboBox2.setEnabled(false);
        
                alterRecordsScreenComponentView(false);

                jRadioButton1.setSelected(false);
                jRadioButton2.setSelected(false);
                jRadioButton3.setSelected(false);
                jRadioButton4.setSelected(false);

                if (defaultTableModelInUse == false) {
                    jTable6.setModel(defaultModel);

                    showOrHideExportDataOptionBox(false);
                    jLabel8.setVisible(false);
                }
        
                ArrayList<String> emptyDatesList = new ArrayList<>();
        
                DefaultComboBoxModel emptyDatesModel = new DefaultComboBoxModel(emptyDatesList.toArray());
                jComboBox2.setModel(emptyDatesModel);
                jComboBox2.setSelectedIndex(-1);

                jComboBox1.setSelectedIndex(0);

                recordsType.setSearchType(1);
        
                if (jComboBox4.isEnabled()) {

                    jComboBox4.setEnabled(false);

                    ArrayList<StudentRecordsTabObject> newList = new ArrayList<>();
                    DefaultComboBoxModel newModelOne = new DefaultComboBoxModel(newList.toArray());

                    jComboBox4.setModel(newModelOne);

                }
                if (jComboBox5.isEnabled()) {

                    jComboBox5.setEnabled(false);

                    ArrayList<String> newList = new ArrayList<>();
                    DefaultComboBoxModel newModelTwo = new DefaultComboBoxModel(newList.toArray());

                    jComboBox5.setModel(newModelTwo);
                }

                classIDs = manager.getInstructorClassListIDs(tracker.getCurrentInstructorInformation().getInstructorID());
                classes = manager.getInstructorClassList(classIDs);

                tracker.setClassList(classes);

                ArrayList<ClassType> newRecordsTabBoxList = new ArrayList<>();

                for (int i = 0; i < classes.size(); i++) {
                    if (i == 0) {
                        newRecordsTabBoxList.add(classes.get(i));
                    }
                    else {
                        for (int j = 0; j < newRecordsTabBoxList.size(); j++) {
                            if (newRecordsTabBoxList.get(j).getClassTitle().equalsIgnoreCase(classes.get(i).getClassTitle())) {

                                classes.get(i).setDuplicateStatus(true);
                                newRecordsTabBoxList.get(j).setDuplicateStatus(true);

                            }
                        }

                        newRecordsTabBoxList.add(classes.get(i));
                    }
                }

                // Create Default ClassType Entry for the "By Class" and "By Student" 
                // JComboBoxes in Records Tab
                ClassType defaultClassType = new ClassType(0, "NULL", 0, " --------------- ", "", "", "", "Lecture", "", 0, 0);
                // Create ClassType Entry for the "By Class" and "By Student" 
                // JComboBoxes in Records Tab in case the current Instructor 
                // Doesn't Have Any Associated Classes.
                ClassType noClassesClassType = new ClassType(0, "NULL", 0, " --- No Associated Classes --- ", "", "", "", "Lecture", "", 0, 0);

                if (newRecordsTabBoxList.isEmpty()) {
                    newRecordsTabBoxList.add(0, noClassesClassType);
                }
                else {
                    newRecordsTabBoxList.add(0, defaultClassType);
                }

                DefaultComboBoxModel newModel = new DefaultComboBoxModel(newRecordsTabBoxList.toArray());

                jComboBox3.setModel(newModel);
                
                jLabel61.setVisible(false);
                jComboBox3.setEnabled(true);
            }
            else if (task == 4) {
                
                System.out.println("Records Type: " + recordsType.getSearchType());
        
                if (jComboBox1.getSelectedIndex() == 0 && recordsType.getSearchType() == 0) {

                    if (jComboBox1.getItemAt(jComboBox1.getSelectedIndex()).getClassTitle().equalsIgnoreCase(" -- No Associated Classes -- ")) {
                        WarningMessageNoClassesAssociatedWithInstructor wmncawi = new WarningMessageNoClassesAssociatedWithInstructor();
                        String htmlFormat = "<html><center>The Current Account isn't Affiliated with Any Classes. Please Link or Add A Class in the Management Tab Before Trying to Access This Feature.</center></html>";

                        wmncawi.jLabel6.setText(htmlFormat);
                        wmncawi.setVisible(true);
                    }
                    else {
                        WarningMessageRecordRetrievalMissingInformation wmrrmi = new WarningMessageRecordRetrievalMissingInformation();
                        wmrrmi.setVisible(true);
                    }
                }
                else if (jComboBox3.getSelectedIndex() == 0 && recordsType.getSearchType() == 1) {
                    if (jComboBox3.getItemAt(jComboBox3.getSelectedIndex()).getClassTitle().equalsIgnoreCase(" -- No Associated Classes -- ")) {
                        WarningMessageNoClassesAssociatedWithInstructor wmncawi = new WarningMessageNoClassesAssociatedWithInstructor();
                        String htmlFormat = "<html><center>The Current Account isn't Affiliated with Any Classes. Please Link or Add A Class in the Management Tab Before Trying to Access This Feature.</center></html>";

                        wmncawi.jLabel6.setText(htmlFormat);
                        wmncawi.setVisible(true);
                    }
                    else {
                        WarningMessageRecordRetrievalMissingInformation wmrrmi = new WarningMessageRecordRetrievalMissingInformation();
                        wmrrmi.setVisible(true);
                    }
                }
                else {

                    // By Class Records Search
                    if (recordsType.getSearchType() == 0) {

                        if (jComboBox2.isEnabled() == false) {

                            WarningMessageRecordRetrievalMissingInformation wmrrmi = new WarningMessageRecordRetrievalMissingInformation();
                            wmrrmi.setVisible(true);

                        }
                        else if (jComboBox1.getSelectedIndex() != 0 && jComboBox2.getSelectedIndex() == 0) {

                            WarningMessageRecordRetrievalEmptyField wmrref = new WarningMessageRecordRetrievalEmptyField();
                            String formatedHTML = "<html>In The <font color=#091cff>By Class:</font> <font color=#ff0c00>Date</font> Field.</html>";
                            wmrref.jLabel7.setText(formatedHTML);

                            wmrref.setVisible(true);
                        }
                        else {

                            tracker.setShowRecordsLoadingGIFStatus(true);
                            commentsList = new ArrayList();

                            DefaultTableModel defaultModel = new DefaultTableModel();
                            jTable6.setModel(defaultModel);

                            showOrHideExportDataOptionBox(false);
                            jLabel8.setVisible(false);
                            defaultTableModelInUse = true;

                            int selectedIndex = jComboBox1.getSelectedIndex();
                            ClassType f1 = jComboBox1.getItemAt(selectedIndex);

                            selectedIndex = jComboBox2.getSelectedIndex();
                            String date = jComboBox2.getItemAt(selectedIndex);

                            ArrayList<AttendanceRecord> attendanceRecordsByClassList = manager.getStudentAttendanceRecordsByClass(f1.getClassID(), date.trim());

                            System.out.println("Attendance Records List Size: " + attendanceRecordsByClassList.size());
                            ArrayList<Integer> studentIDs = new ArrayList<>();

                            for (int i = 0; i < attendanceRecordsByClassList.size(); i++) {
                                System.out.println("Attendance Records Student ID" + i + ": " + attendanceRecordsByClassList.get(i).getAttendanceRecordStudentID());
                                studentIDs.add(attendanceRecordsByClassList.get(i).getAttendanceRecordStudentID());
                            }

                            ArrayList<String> studentNames = manager.getStudentNamesByID(studentIDs);

                            System.out.println("StudentName List size: " + studentNames.size());

                            ArrayList<ByClassJTableObject> byClassTableObjectList = new ArrayList<>();

                            for (int i = 0; i < attendanceRecordsByClassList.size(); i++) {
                                byClassTableObjectList.add(new ByClassJTableObject(studentNames.get(i), attendanceRecordsByClassList.get(i).getAttendanceRecordStudentID(), 
                                        attendanceRecordsByClassList.get(i).getAttendanceRecordStatus(), attendanceRecordsByClassList.get(i).getAttendanceRecordComments()));

                                System.out.println("Attendance Records By Class List: " +  attendanceRecordsByClassList.get(i).getAttendanceRecordComments());
                                commentsList.add(attendanceRecordsByClassList.get(i).getAttendanceRecordComments());
                            }

                            CustomJTableModelAttendanceRecordsByClass byClassTableModel = new CustomJTableModelAttendanceRecordsByClass(byClassTableObjectList);

                            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                            centerRenderer.setHorizontalAlignment(JLabel.CENTER);

                            DefaultTableCellRenderer headerRendererRed = new DefaultTableCellRenderer(){
                                @Override
                                public Component getTableCellRendererComponent(JTable arg0,Object arg1, boolean arg2, boolean arg3, int arg4, int arg5) {
                                     Component tableCellRendererComponent = super.getTableCellRendererComponent(arg0, arg1, arg2, arg3, arg4, arg5);
                                     int align = DefaultTableCellRenderer.CENTER;
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setHorizontalAlignment(align);
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setBackground(new java.awt.Color(255, 0, 0));
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setForeground(new java.awt.Color(255, 255, 255));
                                     return tableCellRendererComponent;
                                }
                            };

                            DefaultTableCellRenderer headerRendererBlue = new DefaultTableCellRenderer(){
                                @Override
                                public Component getTableCellRendererComponent(JTable arg0,Object arg1, boolean arg2, boolean arg3, int arg4, int arg5) {
                                     Component tableCellRendererComponent = super.getTableCellRendererComponent(arg0, arg1, arg2, arg3, arg4, arg5);
                                     int align = DefaultTableCellRenderer.CENTER;
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setHorizontalAlignment(align);
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setBackground(new java.awt.Color(0, 0, 255));
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setForeground(new java.awt.Color(255, 255, 255));
                                     return tableCellRendererComponent;
                                }
                            };

                            DefaultTableCellRenderer headerRendererPurple = new DefaultTableCellRenderer(){
                                @Override
                                public Component getTableCellRendererComponent(JTable arg0,Object arg1, boolean arg2, boolean arg3, int arg4, int arg5) {
                                     Component tableCellRendererComponent = super.getTableCellRendererComponent(arg0, arg1, arg2, arg3, arg4, arg5);
                                     int align = DefaultTableCellRenderer.CENTER;
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setHorizontalAlignment(align);
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setBackground(new java.awt.Color(153, 0, 255));
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setForeground(new java.awt.Color(255, 255, 255));
                                     return tableCellRendererComponent;
                                }
                            };

                            DefaultTableCellRenderer headerRendererBlack = new DefaultTableCellRenderer(){
                                @Override
                                public Component getTableCellRendererComponent(JTable arg0,Object arg1, boolean arg2, boolean arg3, int arg4, int arg5) {
                                     Component tableCellRendererComponent = super.getTableCellRendererComponent(arg0, arg1, arg2, arg3, arg4, arg5);
                                     int align = DefaultTableCellRenderer.CENTER;
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setHorizontalAlignment(align);
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setBackground(new java.awt.Color(0, 0, 0));
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setForeground(new java.awt.Color(255, 255, 255));
                                     return tableCellRendererComponent;
                                }
                            };

                            //Marker_I
                            tracker.setShowRecordsLoadingGIFStatus(false);

                            System.out.println(tracker.getShowRecordsLoadingGIFStatus());

                            jLabel57.setVisible(false);
                            jTable6.setModel(byClassTableModel);

                            jTable6.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                            jTable6.setDefaultRenderer(String.class, centerRenderer);

                            jTable6.getColumnModel().getColumn(0).setHeaderRenderer(headerRendererBlue);
                            jTable6.getColumnModel().getColumn(1).setHeaderRenderer(headerRendererPurple);
                            jTable6.getColumnModel().getColumn(2).setHeaderRenderer(headerRendererRed);
                            jTable6.getColumnModel().getColumn(3).setHeaderRenderer(headerRendererBlack);

                            showOrHideExportDataOptionBox(true);

                            defaultTableModelInUse = false;
                        }
                    }
                    // By Student Records Search
                    else if (recordsType.getSearchType() == 1) {

                        if (jComboBox4.isEnabled() == false || jComboBox5.isEnabled() == false) {

                            if (jComboBox3.getSelectedIndex() != 0 && jComboBox4.getSelectedIndex() == 0) {

                                WarningMessageRecordRetrievalEmptyField wmrref = new WarningMessageRecordRetrievalEmptyField();
                                String formatedHTML = "<html>In The <font color=#00d116>By Student:</font> <font color=#ff0c00>Student</font> Field.</html>";
                                wmrref.jLabel7.setText(formatedHTML);

                                wmrref.setVisible(true);
                            }
                            else {
                                WarningMessageRecordRetrievalMissingInformation wmrrmi = new WarningMessageRecordRetrievalMissingInformation();
                                wmrrmi.setVisible(true);
                            }
                        }
                        else if (jComboBox3.getSelectedIndex() != 0 && jComboBox4.getSelectedIndex() != 0 && jComboBox5.getSelectedIndex() == 0) {

                            WarningMessageRecordRetrievalEmptyField wmrref = new WarningMessageRecordRetrievalEmptyField();
                            String formatedHTML = "<html>In The <font color=#00d116>By Student:</font> <font color=#ff0c00>Date</font> Field.</html>";
                            wmrref.jLabel7.setText(formatedHTML);

                            wmrref.setVisible(true);
                        }
                        else {

                            tracker.setShowRecordsLoadingGIFStatus(true);
                            commentsList = new ArrayList();

                            DefaultTableModel defaultModel = new DefaultTableModel();
                            jTable6.setModel(defaultModel);

                            showOrHideExportDataOptionBox(false);
                            jLabel8.setVisible(false);

                            defaultTableModelInUse = true;

                            int selectedIndex = jComboBox3.getSelectedIndex();
                            ClassType f1 = jComboBox3.getItemAt(selectedIndex);

                            selectedIndex = jComboBox4.getSelectedIndex();
                            StudentRecordsTabObject tab = jComboBox4.getItemAt(selectedIndex);

                            selectedIndex = jComboBox5.getSelectedIndex();
                            String date = jComboBox5.getItemAt(selectedIndex);

                            ArrayList<AttendanceRecord> attendanceRecordsByClassList = manager.getStudentAttendanceRecordsByStudent(f1.getClassID(), tab.getStudentIDNumber(), date);
                            ArrayList<ByStudentJTableObject> byStudentJTableObjectList = new ArrayList<>();

                            for (int i = 0; i < attendanceRecordsByClassList.size(); i++) {
                                byStudentJTableObjectList.add(new ByStudentJTableObject(attendanceRecordsByClassList.get(i).getAttendanceRecordDate(), attendanceRecordsByClassList.get(i).getAttendanceRecordStatus(), attendanceRecordsByClassList.get(i).getAttendanceRecordComments()));

                                System.out.println("Attendnace Records By Student List: " +  attendanceRecordsByClassList.get(i).getAttendanceRecordComments());
                                commentsList.add(attendanceRecordsByClassList.get(i).getAttendanceRecordComments());
                            }

                            CustomJTableModelAttendanceRecordsByStudent byStudentModel = new CustomJTableModelAttendanceRecordsByStudent(byStudentJTableObjectList);

                            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                            centerRenderer.setHorizontalAlignment(JLabel.CENTER);

                            DefaultTableCellRenderer headerRendererRed = new DefaultTableCellRenderer(){
                                @Override
                                public Component getTableCellRendererComponent(JTable arg0,Object arg1, boolean arg2, boolean arg3, int arg4, int arg5) {
                                     Component tableCellRendererComponent = super.getTableCellRendererComponent(arg0, arg1, arg2, arg3, arg4, arg5);
                                     int align = DefaultTableCellRenderer.CENTER;
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setHorizontalAlignment(align);
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setBackground(new java.awt.Color(255, 0, 0));
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setForeground(new java.awt.Color(255, 255, 255));
                                     return tableCellRendererComponent;
                                }
                            };

                            DefaultTableCellRenderer headerRendererGreen = new DefaultTableCellRenderer(){
                                @Override
                                public Component getTableCellRendererComponent(JTable arg0,Object arg1, boolean arg2, boolean arg3, int arg4, int arg5) {
                                     Component tableCellRendererComponent = super.getTableCellRendererComponent(arg0, arg1, arg2, arg3, arg4, arg5);
                                     int align = DefaultTableCellRenderer.CENTER;
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setHorizontalAlignment(align);
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setBackground(new java.awt.Color(0, 153, 0));
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setForeground(new java.awt.Color(255, 255, 255));
                                     return tableCellRendererComponent;
                                }
                            };

                            DefaultTableCellRenderer headerRendererBlack = new DefaultTableCellRenderer(){
                                @Override
                                public Component getTableCellRendererComponent(JTable arg0,Object arg1, boolean arg2, boolean arg3, int arg4, int arg5) {
                                     Component tableCellRendererComponent = super.getTableCellRendererComponent(arg0, arg1, arg2, arg3, arg4, arg5);
                                     int align = DefaultTableCellRenderer.CENTER;
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setHorizontalAlignment(align);
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setBackground(new java.awt.Color(0, 0, 0));
                                     ((DefaultTableCellRenderer)tableCellRendererComponent).setForeground(new java.awt.Color(255, 255, 255));
                                     return tableCellRendererComponent;
                                }
                            };

                            tracker.setShowRecordsLoadingGIFStatus(false);

                            System.out.println(tracker.getShowRecordsLoadingGIFStatus());

                            jLabel57.setVisible(false);
                            jTable6.setModel(byStudentModel);

                            jTable6.setDefaultRenderer(String.class, centerRenderer);

                            jTable6.getColumnModel().getColumn(0).setHeaderRenderer(headerRendererGreen);
                            jTable6.getColumnModel().getColumn(1).setHeaderRenderer(headerRendererRed);
                            jTable6.getColumnModel().getColumn(2).setHeaderRenderer(headerRendererBlack);

                            showOrHideExportDataOptionBox(true);

                            defaultTableModelInUse = false;
                        }
                    }  
                }
            }
            else if (task == 5) {
                
                if (recordsType.getSearchType() == 0) {
            
                    CustomJTableModelAttendanceRecordsByClass model = (CustomJTableModelAttendanceRecordsByClass) jTable6.getModel();

                    int selectedIndexClassType = jComboBox1.getSelectedIndex();
                    AttendanceRecord record;

                    if (jTextArea1.getText().equalsIgnoreCase("Enter Comments on This Particular Student's Conduct During This Class Period.")) {
                        record = new AttendanceRecord(0, jComboBox1.getItemAt(selectedIndexClassType).getClassID(), tracker.getCurrentInstructorInformation().getInstructorID(), 
                            model.getList().get(recordsJTableCurrentIndexRowSelected).getStudentID(), jComboBox7.getItemAt(jComboBox7.getSelectedIndex()), jLabel21.getText().trim(), 
                            "");
                    }
                    else {
                        record = new AttendanceRecord(0, jComboBox1.getItemAt(selectedIndexClassType).getClassID(), tracker.getCurrentInstructorInformation().getInstructorID(), 
                            model.getList().get(recordsJTableCurrentIndexRowSelected).getStudentID(), jComboBox7.getItemAt(jComboBox7.getSelectedIndex()), jLabel21.getText().trim(), 
                            jTextArea1.getText());
                    }


                    System.out.println("Attendance Record By Class: " + record.getAttendanceRecordID());
                    System.out.println("Attendance Record By Class: " + record.getAttendanceRecordClassID());
                    System.out.println("Attendance Record By Class: " + record.getAttendanceRecordInstructorID());
                    System.out.println("Attendance Record By Class: " + record.getAttendanceRecordStudentID());
                    System.out.println("Attendance Record By Class: " + record.getAttendanceRecordStatus());
                    System.out.println("Attendance Record By Class: " + record.getAttendanceRecordDate());
                    System.out.println("Attendance Record By Class: " + record.getAttendanceRecordComments());

                    boolean result = manager.updateAttendanceRecord(record);

                    System.out.println("Update Result By Class: " + result);

                    if (result == true) {

                        if (record.getAttendanceRecordComments().equalsIgnoreCase("") || record.getAttendanceRecordComments().equalsIgnoreCase("Enter Comments on This Particular Student's Conduct During This Class Period.")) {
                            ByClassJTableObject object = new ByClassJTableObject(model.getList().get(recordsJTableCurrentIndexRowSelected).getStudentName(), model.getList().get(recordsJTableCurrentIndexRowSelected).getStudentID(), record.getAttendanceRecordStatus(), "N/A");
                            model.getList().set(recordsJTableCurrentIndexRowSelected, object);
                        }
                        else {
                            ByClassJTableObject object = new ByClassJTableObject(model.getList().get(recordsJTableCurrentIndexRowSelected).getStudentName(), model.getList().get(recordsJTableCurrentIndexRowSelected).getStudentID(), record.getAttendanceRecordStatus(), "Available");
                        model.getList().set(recordsJTableCurrentIndexRowSelected, object);
                        }

                        commentsList.set(recordsJTableCurrentIndexRowSelected, record.getAttendanceRecordComments());

                        jTable6.setModel(model);
                        jTable6.repaint();

                        RecordsScreenTableContentsSuccessfullyUpdated rstcsu = new RecordsScreenTableContentsSuccessfullyUpdated();
                        rstcsu.setVisible(true);
                    }
                    else {
                        RecordsScreenTableContentsUpdateFailed rstcuf = new RecordsScreenTableContentsUpdateFailed();
                        rstcuf.setVisible(true);
                    }
                }
                else if (recordsType.getSearchType() == 1) {

                    int selectedIndexClassType = jComboBox3.getSelectedIndex();
                    int selectedIndexStudentRecordsTabObject = jComboBox4.getSelectedIndex();

                    CustomJTableModelAttendanceRecordsByStudent model = (CustomJTableModelAttendanceRecordsByStudent) jTable6.getModel();
                    AttendanceRecord record;

                    if (jTextArea1.getText().equalsIgnoreCase("Enter Comments on This Particular Student's Conduct During This Class Period.")) {
                        record = new AttendanceRecord(0, jComboBox3.getItemAt(selectedIndexClassType).getClassID(), tracker.getCurrentInstructorInformation().getInstructorID(), 
                            jComboBox4.getItemAt(jComboBox4.getSelectedIndex()).getStudentIDNumber(), jComboBox7.getItemAt(jComboBox7.getSelectedIndex()), jLabel21.getText(), 
                            "");
                    }
                    else {
                        record = new AttendanceRecord(0, jComboBox3.getItemAt(selectedIndexClassType).getClassID(), tracker.getCurrentInstructorInformation().getInstructorID(), 
                            jComboBox4.getItemAt(jComboBox4.getSelectedIndex()).getStudentIDNumber(), jComboBox7.getItemAt(jComboBox7.getSelectedIndex()), jLabel21.getText(), 
                            jTextArea1.getText());
                    }

                    System.out.println("Attendance Record By Student: " + record.getAttendanceRecordID());
                    System.out.println("Attendance Record By Student: " + record.getAttendanceRecordClassID());
                    System.out.println("Attendance Record By Student: " + record.getAttendanceRecordInstructorID());
                    System.out.println("Attendance Record By Student: " + record.getAttendanceRecordStudentID());
                    System.out.println("Attendance Record By Student: " + record.getAttendanceRecordStatus());
                    System.out.println("Attendance Record By Student: " + record.getAttendanceRecordDate());
                    System.out.println("Attendance Record By Student: " + record.getAttendanceRecordComments());

                    boolean result = manager.updateAttendanceRecord(record);

                    System.out.println("Update Result By Student: " + result);

                    if (result == true) {

                        if (record.getAttendanceRecordComments().equalsIgnoreCase("") || record.getAttendanceRecordComments().equalsIgnoreCase("Enter Comments on This Particular Student's Conduct During This Class Period.")) {
                            ByStudentJTableObject object = new ByStudentJTableObject(record.getAttendanceRecordDate(), record.getAttendanceRecordStatus(), "N/A");
                            model.getList().set(recordsJTableCurrentIndexRowSelected, object);
                        }
                        else {
                            ByStudentJTableObject object = new ByStudentJTableObject(record.getAttendanceRecordDate(), record.getAttendanceRecordStatus(), "Available");
                            model.getList().set(recordsJTableCurrentIndexRowSelected, object);
                        }

                        commentsList.set(recordsJTableCurrentIndexRowSelected, record.getAttendanceRecordComments());

                        jTable6.setModel(model);
                        jTable6.repaint();

                        RecordsScreenTableContentsSuccessfullyUpdated rstcsu = new RecordsScreenTableContentsSuccessfullyUpdated();
                        rstcsu.setVisible(true);
                    }
                    else {
                        RecordsScreenTableContentsUpdateFailed rstcuf = new RecordsScreenTableContentsUpdateFailed();
                        rstcuf.setVisible(true);
                    }
                }
                
                jLabel57.setVisible(false);
                setRecordsScreenAttendanceAlteringComponentsEnabled(true);
            }
            // Repopulate By Class List JComboBox in Attendance Tab
            else if (task == 6) {
                
                classIDs = manager.getInstructorClassListIDs(tracker.getCurrentInstructorInformation().getInstructorID());
                classes = manager.getInstructorClassList(classIDs);

                tracker.setClassList(classes);

                // Create Default ClassType Entry for JComboBox in Attendance Tab
                ClassType defaultClassTypeAttendanceTabJComboBox = new ClassType(0, "NULL", 0, " ---------------------- ", "", "", "", "Lecture", "", 0, 0);
                // Create ClassType Entry for JComboBox in Attendance Tab in case the
                // current Instructor Doesn't Have Any Associated Classes.
                ClassType noClassesTypeAttendanceTabJComboBox = new ClassType(0, "NULL", 0, " --- No Associated Classes --- ", "", "", "", "Lecture", "", 0, 0);

                ArrayList<ClassType> recordsTabBoxListOne = new ArrayList<>();

                for (int i = 0; i < classes.size(); i++) {
                    if (i == 0) {
                        recordsTabBoxListOne.add(classes.get(i));
                    }
                    else {
                        for (int j = 0; j < recordsTabBoxListOne.size(); j++) {
                            if (recordsTabBoxListOne.get(j).getClassTitle().equalsIgnoreCase(classes.get(i).getClassTitle())) {

                                classes.get(i).setDuplicateStatus(true);
                                recordsTabBoxListOne.get(j).setDuplicateStatus(true);
                            }
                        }

                        recordsTabBoxListOne.add(classes.get(i));
                    }
                }

                if (recordsTabBoxListOne.isEmpty()) {
                    recordsTabBoxListOne.add(0, noClassesTypeAttendanceTabJComboBox);
                }
                else {
                    recordsTabBoxListOne.add(0, defaultClassTypeAttendanceTabJComboBox);
                }

                DefaultComboBoxModel modelBoxOne = new DefaultComboBoxModel(recordsTabBoxListOne.toArray());

                jComboBox6.setModel(modelBoxOne);
                jComboBox6.addPopupMenuListener(listener);
                jComboBox6.setSelectedIndex(0);

                jComboBox6.setEnabled(true);
            }
            // ActionPerformed Method For "By Class" ClassList JComboBox
            else if (task == 7) {
                
                int selectedIndex = jComboBox1.getSelectedIndex();
                System.out.println("ActionPerformed: " + selectedIndex);

                if (selectedIndex == 0) {

                    ArrayList<String> jComboBox2EmptyListOne = new ArrayList<>();

                    DefaultComboBoxModel jComboBox2ModelEmptyListOne = new DefaultComboBoxModel(jComboBox2EmptyListOne.toArray());
                    jComboBox2.setModel(jComboBox2ModelEmptyListOne);
                    jComboBox2.setSelectedIndex(-1);

                    jComboBox2.setEnabled(false);
                }
                else if (selectedIndex > 0) {

                    ClassType type = jComboBox1.getItemAt(selectedIndex);
                    jComboBox1SelectedClassID = type.getClassID();
                    recordsType.setClassID(jComboBox1SelectedClassID);

                    classDatesList = manager.getAssociatedClassDates(type.getClassID());

                    if (classDatesList.isEmpty()) {

                        WarningMessageNoAssociatedClassDates wmnacd = new WarningMessageNoAssociatedClassDates();
                        wmnacd.setVisible(true);

                        jComboBox1.setSelectedIndex(0);

                        ArrayList<String> jComboBox2EmptyListTwo = new ArrayList<>();

                        DefaultComboBoxModel jComboBox2ModelEmptyListTwo = new DefaultComboBoxModel(jComboBox2EmptyListTwo.toArray());
                        jComboBox2.setModel(jComboBox2ModelEmptyListTwo);
                        jComboBox2.setSelectedIndex(-1);
                    }
                    else {

                        for (int i = 0; i < classDatesList.size(); i++) {
                            String date = classDatesList.get(i);
                            
                            date = " " + date;
                            classDatesList.set(i, date);
                        }
                        
                        classDatesList.add(0, " --------------- ");

                        DefaultComboBoxModel jComboBox2Model = new DefaultComboBoxModel(classDatesList.toArray());
                        jComboBox2.setModel(jComboBox2Model);
                        jComboBox2.setSelectedIndex(0);
                    }
                }
                
                jComboBox2.setEnabled(true);
                setAttendanceRecordsLoadingImageBCVisibility(false);
            }
            // ActionPerformed Method For "By Student" ClassList JComboBox
            else if (task == 8) {
                
                int selectedIndex = jComboBox3.getSelectedIndex();
        
                if (selectedIndex == 0) {

                    jComboBox4.setEnabled(false);
                    jComboBox5.setEnabled(false);

                    ArrayList<StudentRecordsTabObject> jComboBox4EmptyStudentNameListOne = new ArrayList<>();
                    ArrayList<String> jComboBox5EmptyDateList = new ArrayList<>();

                    DefaultComboBoxModel jComboBox4ModelEmptyStudentNameListOne = new DefaultComboBoxModel(jComboBox4EmptyStudentNameListOne.toArray());
                    DefaultComboBoxModel jComboBox5ModelEmptyDateList = new DefaultComboBoxModel(jComboBox5EmptyDateList.toArray());

                    jComboBox4.setModel(jComboBox4ModelEmptyStudentNameListOne);
                    jComboBox5.setModel(jComboBox5ModelEmptyDateList);

                    jComboBox4.setSelectedIndex(-1);
                    jComboBox5.setSelectedIndex(-1);
                }
                else if (selectedIndex > 0) {

                    ClassType type = jComboBox3.getItemAt(selectedIndex);
                    jComboBox3SelectedClassID = type.getClassID();
                    recordsType.setClassID(jComboBox1SelectedClassID);

                    studentIDAndNameList = manager.getStudentsByClass(type.getClassID());

                    if (studentIDAndNameList.isEmpty()) {

                        jComboBox4.setEnabled(false);
                        jComboBox5.setEnabled(false);

                        WarningMessageNoAssociatedStudents wmnas = new WarningMessageNoAssociatedStudents();
                        wmnas.setVisible(true);

                        jComboBox3.setSelectedIndex(0);

                        ArrayList<StudentRecordsTabObject> jComboBox4EmptyStudentNameListTwo = new ArrayList<>();
                        ArrayList<String> jComboBox5EmptyDateList = new ArrayList<>();

                        DefaultComboBoxModel jComboBox4ModelEmptyStudentNameListTwo = new DefaultComboBoxModel(jComboBox4EmptyStudentNameListTwo.toArray());
                        DefaultComboBoxModel jComboBox5ModelEmptyDateList = new DefaultComboBoxModel(jComboBox5EmptyDateList.toArray());

                        jComboBox4.setModel(jComboBox4ModelEmptyStudentNameListTwo);
                        jComboBox5.setModel(jComboBox4ModelEmptyStudentNameListTwo);

                        jComboBox4.setSelectedIndex(-1);
                        jComboBox5.setSelectedIndex(-1);
                    }
                    else {

                        studentIDAndNameList.add(0, new StudentRecordsTabObject(0, " --------------- "));

                        DefaultComboBoxModel dateModelTwo = new DefaultComboBoxModel(studentIDAndNameList.toArray());
                        jComboBox4.setModel(dateModelTwo);
                        jComboBox4.setSelectedIndex(0);
                    }
                }
                
                jComboBox4.setEnabled(true);
                setAttendanceRecordsLoadingImageBSVisibility(false);
            }
            // ActionPerformed Method For "By Student" Student List JComboBox
            else if (task == 9) {
                
                if (jComboBox4.isEnabled() == true) {
            
                    int selectedIndex = jComboBox4.getSelectedIndex();

                    recordsType.setStudentName(jComboBox4.getItemAt(selectedIndex).getStudentName());

                    if (selectedIndex == 0) {

                        jComboBox5.setEnabled(false);

                        ArrayList<String> jComboBox5EmptyDateByStudentListOne = new ArrayList<>();

                        DefaultComboBoxModel jComboBox5ModelEmptyDateByStudentListOne = new DefaultComboBoxModel(jComboBox5EmptyDateByStudentListOne.toArray());
                        jComboBox5.setModel(jComboBox5ModelEmptyDateByStudentListOne);
                        jComboBox5.setSelectedIndex(-1);
                    }
                    else if (selectedIndex > 0) {

                        //jComboBox4SelectedStudentName = jComboBox4.getItemAt(selectedIndex);

                        //ArrayList<Integer> jComboBoxStudentNames = (ArrayList <Integer>) studentIDAndNameList.get("Student IDs");
                        //jComboBox4SelectedStudentID = jComboBoxStudentNames.get(selectedIndex);

                        jComboBox4SelectedStudentID = studentIDAndNameList.get(selectedIndex).getStudentIDNumber();
                        System.out.println("StudentID = " + jComboBox4SelectedStudentID);

                        classDatesList = manager.getAssociatedClassDatesByStudent(jComboBox3SelectedClassID, jComboBox4SelectedStudentID);

                        if (classDatesList.isEmpty()) {

                            jComboBox5.setEnabled(false);

                            WarningMessageNoAssociatedAttendanceRecordsByStudent wmnaarbs = new WarningMessageNoAssociatedAttendanceRecordsByStudent();
                            wmnaarbs.setVisible(true);

                            jComboBox4.setSelectedIndex(0);

                            ArrayList<String> jComboBox5EmptyDateByStudentNameList = new ArrayList<>();

                            DefaultComboBoxModel jComboBox5ModelEmptyDateByStudentNameList = new DefaultComboBoxModel(jComboBox5EmptyDateByStudentNameList.toArray());
                            jComboBox5.setModel(jComboBox5ModelEmptyDateByStudentNameList);
                            jComboBox5.setSelectedIndex(-1);
                        }
                        else {

                            if (classDatesList.size() == 1) {
                                classDatesList.add(0, " --------------- ");
                            }
                            else {
                                classDatesList.add(0, " --------------- ");
                                classDatesList.add(1, "ALL DATES");
                            }

                            DefaultComboBoxModel dateModelByStudent = new DefaultComboBoxModel(classDatesList.toArray());
                            jComboBox5.setModel(dateModelByStudent);
                            jComboBox5.setSelectedIndex(0);
                        }
                    }
                }
                
                jComboBox5.setEnabled(true);
                setAttendanceRecordsLoadingImageBSVisibility(false);
            }
            else if (task == 10) {
                
            }
            else if (task == 11) {
                
            }
            
            }
            catch (Exception e) {
                e.printStackTrace();
            }
            
            return null;
        }
        
        // This method is automatically invoked after the
        // doInBackground() method has finished
        // executing.
        @Override
        protected void done() {
            // Make the GuiFour Frame
            // invisible.
            //setVisible(false);
            //dispose();
        }
    }
}
