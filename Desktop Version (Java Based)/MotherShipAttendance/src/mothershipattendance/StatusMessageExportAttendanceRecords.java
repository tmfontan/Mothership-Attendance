/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mothershipattendance;

import javax.swing.SwingWorker;

/**
 *  This Class is Responsible for Creating a Pop-Up GUI
 *  Status Message which Alerts the User of What Type of
 *  Error Has Occurred During either the Instructor or 
 *  Student Account Creation Process. This Warning / 
 *  Status Message GUI Class is Instantiated With an
 *  Error Type Integer Value Which Allows it to Know 
 *  Which Process to Execute Upon Disposal, in Addition
 *  to a Form Type Integer Value Which Tells the GUI
 *  Window Which Account Creation Form Has Invoked it.
 * 
 *  @date           November 10, 2020
 *  @author         Tyler Fontana
 *  @version        1.0.2
 */
public class StatusMessageExportAttendanceRecords extends javax.swing.JFrame {

    /**
     *  This Basic Constructor Creates a new Instance of
     *  the Status Message Account Creation GUI Class. The First
     *  Parameter Integer Value Passed in Acts as the Status
     *  Message Number Type which Tells the Class What Task to
     *  Accomplish on Window Disposal. The Second Parameter Value
     *  Lets the GUI Window Know Which Account Creation Window
     *  Form Has Created the Window.
     * 
     *  @param v1               The Error / Status Message
     *                          Number Which Lets the Pop-Up
     *                          Window Know Which Task to
     *                          Accomplish on Window Disposal.
     * 
     *  @param v2               The Form Type Integer Value
     *                          Which Lets the Status Message
     *                          Window Know Which Account Creation
     *                          GUI Window Form has Created it.
     *
     *  @param v3               The Boolean Array Containing the
     *                          Validity Check Result Values. This
     *                          May Be Used if Multiple Fields 
     *                          Contain Invalid Characters.
     */
    public StatusMessageExportAttendanceRecords(int v1, int v2, boolean[] v3) {
        // Set the Error / Status Message Type.
        messageType = v1;
        // Set the Account Creation Form Type.
        formType = v2;
        // Save Validity Results Array.
        results = v3;
        /**
         * Invoke the Method Used to Create and
         * Display the GUI Window Form.
         **/
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Warning Screen");
        setBackground(new java.awt.Color(153, 153, 153));
        setLocation(new java.awt.Point(450, 294));
        setName("WarningFrame"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setOpaque(false);

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("<html><center>Multiple Fields Contain Missing or Incorrect Information. Please Ensure that you have Entered a Response in Every Required Information Field.</center></html>");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setOpaque(false);

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/warningemblemscaled.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(16, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addContainerGap(270, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(15, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(17, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel1);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/steelbackground356x112.png"))); // NOI18N
        jLabel3.setToolTipText("");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 114, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     *  This Method is Automatically Invoked Whenever the User
     *  Closes the current Status Message GUI Window Instance, or
     *  the dispose() method is invoked somewhere within the Class.
     *  This Method is Responsible for Creating and Executing a
     *  Background Event Queue Thread Which is Responsible for
     *  Manipulating the Specified Account Creation GUI Window 
     *  Form's Aesthetics.
     * 
     *  @param evt              The Action of the Current Window Instance
     *                          Closing either Programmatically or through
     *                          User intervention / Response.
     */
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        /**
         *  Execute a new Background Event Queue Thread
         *  which will Accomplish the Heavy Window Form 
         *  Manipulation Tasks Upon Window Disposal.
         */
        new TaskHandler(messageType).execute();        
    }//GEN-LAST:event_formWindowClosed

    public void setStatusDisplayMessage(String value) {
        jLabel6.setText(value);
    }
    
    public void setFormEmblemType(int value) {
        if (value == 0) {
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/warningemblemscaled.png")));
        }
        else if (value == 1) {
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mothershipattendance/Image/YMIcon75x75.png")));
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatusMessageExportAttendanceRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatusMessageExportAttendanceRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatusMessageExportAttendanceRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatusMessageExportAttendanceRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StatusMessageExportAttendanceRecords(-1, -1, new boolean[1]).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
    
    /**
    *  Create an Global Integer Variable Which is Responsible
    *  For Determining What Type of Error Has Occurred in the
    *  Account Creation Process. This Value will be Defined
    *  in as the Parameter Value that the GUI Class Instance is
    *  Instantiated With.
    */
    public int messageType;
    /**
     *  Create a Global Integer Variable Which is Responsible
     *  For Determining Which Account Creation GUI Window Form
     *  Has Invoked it. This Value will either be Defined as
     *  the Integer 0 or 1. The Definition of these Values is
     *  Provided Below:
     * 
     *  0   -   Instructor Account Creation Window
     * 
     *  1   -   Student Account Creation Window
     */
    public int formType;
    
    /**
     *  This Array Value is Used to Hold the Results of
     *  the Second Segment of the Validity Checking Process
     *  It will be Used should there be Multiple Response
     *  Fields that Contain Prohibited or Blank Characters.
     */
    public boolean[] results;
    
    /**
     *  This Class is an Implementation of the Java SwingWorker Interface,
     *  which is used to create Background Threads that can perform
     *  operations and make changes to the GUI Form. A Java Swing Program
     *  is run off a Special Kind of Thread Called an Event Queue Thread which
     *  is specifically made to Handle Events Such as ActionPerformed,
     *  MouseClicked, and FocusLost/FocusGained methods while being able
     *  to immediately return to its Original Task. This means that a regular
     *  Java Class or Java Thread, is unable to invoke Changes within a Java
     *  Swing Form without causing unprecedented, non-repeatable errors during
     *  Program Execution. Thus, to invoke Changes to the Swing Form without
     *  violating the Rules of the Main Event Queue Thread, we create an Instance
     *  of the Java SwingWorker Class. This SwingWorker Class is used to create
     *  a Second Background Event Queue Thread which is used to Free Up the
     *  Main Event Queue Thread of doing long taxing operations (So that it may
     *  focus on maintaining the Window Form's Overall Appearance [Look & Feel]),
     *  in addition to being able to invoke changes within the Swing Form without
     *  causing unprecedented unrepeatable errors.
     *  
     *  The TaskHandler Class is used to create and execute a Background Thread
     *  every time the User Clicks on one of the two JButton Components Located Within
     *  the form. Once these threads are executed, they will be used to either Retrieve
     *  and determine User Response Integrity before moving on to the Decryption Process
     *  or alter Component Information/Aesthetics.
     * 
     *  (Note: the doInBackground() method is the Equivalent of the run() method
     *  used when manipulating regular threads. This means that the doInBackground()
     *  method will immediately start once the Program invokes the execute() method
     *  on the new TaskHandler SwingWorker Class Instance. The done() method is invoked
     *  immediately after the doInBackground() method has finished its execution. Although
     *  there may be no Operations performed within the Method, it its required to have
     *  within every SwingWorker Interface.)
     */
    private class TaskHandler extends SwingWorker<Void,Void> {
        
        /**
        *  Create A Custom String Value Meant to Hold 
        *  the User Input Password Value
        */
        public String passwordValue = "";
        /**
        *  Create an Integer Variable Which is Responsible
        *  For Determining What Type of Task the Background
        *  Event Queue Thread will Execute.
        */
        public int task;
        
        /**
         *  This Constructor is Used to Create a New
         *  Instance of the Task Handler Thread and
         *  set the Error Type Integer Number Value
         *  which Determines what the Thread Does on
         *  Window Disposal.
         * 
         *  @param value        The Error / Status Message
         *                      Number that Tells the Background
         *                      SwingWorker Event Queue Thread
         *                      which Task to Execute.
         */
        public TaskHandler(int value) {
            // Set the Task Type.
            task = value;
        }
        
        /**
         * Method for Separate EventQueue Thread
         * to Execute.
         **/
        @Override
        protected Void doInBackground() throws Exception {
            
            /**
             *  Create Custom String Variable to Hold the
             *  Newly Generated Custom Message Which will be
             *  Displayed Under the Password Field in Either
             *  the Instructor or Student Account Creation
             *  GUI Window Form.
             */
            String displayMessage = "";
            
            if (formType == 0) {
                
            }
            else if (formType == 1) {
                
            }
            
            /**
             * We will always Return a Null
             * Value for any SwingWorker Thread.
             */
            return null;
        }
    }
}
